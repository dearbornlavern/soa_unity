// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace autonomy_msg {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Autonomy {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_GridSpec__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_GridSpec, global::autonomy_msg.Gpb_GridSpec.Builder> internal__static_autonomy_msg_Gpb_GridSpec__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_NGOSite__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_NGOSite, global::autonomy_msg.Gpb_NGOSite.Builder> internal__static_autonomy_msg_Gpb_NGOSite__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_SPOI__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_SPOI, global::autonomy_msg.Gpb_SPOI.Builder> internal__static_autonomy_msg_Gpb_SPOI__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Waypoint_Override__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Waypoint_Override, global::autonomy_msg.Gpb_Waypoint_Override.Builder> internal__static_autonomy_msg_Gpb_Waypoint_Override__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Village__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Village, global::autonomy_msg.Gpb_Village.Builder> internal__static_autonomy_msg_Gpb_Village__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_GridCell__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_GridCell, global::autonomy_msg.Gpb_GridCell.Builder> internal__static_autonomy_msg_Gpb_GridCell__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Actor__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Actor, global::autonomy_msg.Gpb_Actor.Builder> internal__static_autonomy_msg_Gpb_Actor__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Custom__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Custom, global::autonomy_msg.Gpb_Custom.Builder> internal__static_autonomy_msg_Gpb_Custom__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Base__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Base, global::autonomy_msg.Gpb_Base.Builder> internal__static_autonomy_msg_Gpb_Base__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Terrain__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Terrain, global::autonomy_msg.Gpb_Terrain.Builder> internal__static_autonomy_msg_Gpb_Terrain__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Mode_Command__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Mode_Command, global::autonomy_msg.Gpb_Mode_Command.Builder> internal__static_autonomy_msg_Gpb_Mode_Command__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Waypoint__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Waypoint, global::autonomy_msg.Gpb_Waypoint.Builder> internal__static_autonomy_msg_Gpb_Waypoint__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Time__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Time, global::autonomy_msg.Gpb_Time.Builder> internal__static_autonomy_msg_Gpb_Time__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_RoadCell__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_RoadCell, global::autonomy_msg.Gpb_RoadCell.Builder> internal__static_autonomy_msg_Gpb_RoadCell__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Autonomy() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg5hdXRvbm9teS5wcm90bxIMYXV0b25vbXlfbXNnIogBCgxHcGJfR3JpZFNw" + 
          "ZWMSEwoLYmVsaWVmX3RpbWUYASACKAQSDgoGaGVpZ2h0GAIgAigFEg0KBXdp" + 
          "ZHRoGAMgAigFEhQKDGdyaWRPcmlnaW5feBgEIAIoAhIUCgxncmlkT3JpZ2lu" + 
          "X3oYBSACKAISGAoQZ3JpZFRvV29ybGRTY2FsZRgGIAIoAiKSAQoLR3BiX05H" + 
          "T1NpdGUSEwoLYmVsaWVmX3RpbWUYASACKAQSCgoCaWQYAiACKAUSKQoFY2Vs" + 
          "bHMYAyADKAsyGi5hdXRvbm9teV9tc2cuR3BiX0dyaWRDZWxsEhAKCHN1cHBs" + 
          "aWVzGAQgAigCEhIKCmNhc3VhbHRpZXMYBSACKAISEQoJY2l2aWxpYW5zGAYg" + 
          "AigCImUKCEdwYl9TUE9JEhMKC2JlbGllZl90aW1lGAEgAigEEhQKDHJlcXVl" + 
          "c3RfdGltZRgCIAIoBBIQCghhY3Rvcl9pZBgDIAIoBRINCgVwb3NfeBgEIAIo" + 
          "AhINCgVwb3NfehgFIAIoAiKBAQoVR3BiX1dheXBvaW50X092ZXJyaWRlEhMK" + 
          "C2JlbGllZl90aW1lGAEgAigEEhQKDHJlcXVlc3RfdGltZRgCIAIoBBIQCghh" + 
          "Y3Rvcl9pZBgDIAIoBRINCgVwb3NfeBgEIAIoAhINCgVwb3NfeRgFIAIoAhIN" + 
          "CgVwb3NfehgGIAIoAiJ/CgtHcGJfVmlsbGFnZRITCgtiZWxpZWZfdGltZRgB" + 
          "IAIoBBIKCgJpZBgCIAIoBRIpCgVjZWxscxgDIAMoCzIaLmF1dG9ub215X21z" + 
          "Zy5HcGJfR3JpZENlbGwSEAoIc3VwcGxpZXMYBCACKAISEgoKY2FzdWFsdGll" + 
          "cxgFIAIoAiIoCgxHcGJfR3JpZENlbGwSCwoDcm93GAEgAigFEgsKA2NvbBgC" + 
          "IAIoBSL9AQoJR3BiX0FjdG9yEhMKC2JlbGllZl90aW1lGAEgAigEEhEKCXVu" + 
          "aXF1ZV9pZBgCIAIoBRITCgthZmZpbGlhdGlvbhgDIAIoBRIMCgR0eXBlGAQg" + 
          "AigFEhAKCGlzX2FsaXZlGAUgAigIEhMKC2lzX2NhcnJ5aW5nGAYgAigFEhUK" + 
          "DWlzX3dlYXBvbml6ZWQYByACKAgSDQoFcG9zX3gYCCACKAISDQoFcG9zX3kY" + 
          "CSACKAISDQoFcG9zX3oYCiACKAISEgoKdmVsb2NpdHlfeBgLIAEoAhISCgp2" + 
          "ZWxvY2l0eV95GAwgASgCEhIKCnZlbG9jaXR5X3oYDSABKAIiLwoKR3BiX0N1" + 
          "c3RvbRITCgtiZWxpZWZfdGltZRgBIAIoBBIMCgRkYXRhGAIgAigMImgKCEdw" + 
          "Yl9CYXNlEhMKC2JlbGllZl90aW1lGAEgAigEEgoKAmlkGAIgAigFEikKBWNl" + 
          "bGxzGAMgAygLMhouYXV0b25vbXlfbXNnLkdwYl9HcmlkQ2VsbBIQCghzdXBw" + 
          "bGllcxgEIAIoAiJbCgtHcGJfVGVycmFpbhITCgtiZWxpZWZfdGltZRgBIAIo" + 
          "BBIMCgR0eXBlGAIgAigFEikKBWNlbGxzGAMgAygLMhouYXV0b25vbXlfbXNn" + 
          "LkdwYl9HcmlkQ2VsbCJgChBHcGJfTW9kZV9Db21tYW5kEhMKC2JlbGllZl90" + 
          "aW1lGAEgAigEEhQKDHJlcXVlc3RfdGltZRgCIAIoBBIQCghhY3Rvcl9pZBgD" + 
          "IAIoBRIPCgdtb2RlX2lkGAQgAigFIngKDEdwYl9XYXlwb2ludBITCgtiZWxp" + 
          "ZWZfdGltZRgBIAIoBBIUCgxyZXF1ZXN0X3RpbWUYAiACKAQSEAoIYWN0b3Jf" + 
          "aWQYAyACKAUSDQoFcG9zX3gYBCACKAISDQoFcG9zX3kYBSACKAISDQoFcG9z" + 
          "X3oYBiACKAIiLQoIR3BiX1RpbWUSEwoLYmVsaWVmX3RpbWUYASACKAQSDAoE" + 
          "dGltZRgCIAIoBCJgCgxHcGJfUm9hZENlbGwSEwoLYmVsaWVmX3RpbWUYASAC" + 
          "KAQSEQoJaXNSb2FkRW5kGAIgAigIEigKBGNlbGwYAyACKAsyGi5hdXRvbm9t" + 
          "eV9tc2cuR3BiX0dyaWRDZWxs");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_autonomy_msg_Gpb_GridSpec__Descriptor = Descriptor.MessageTypes[0];
        internal__static_autonomy_msg_Gpb_GridSpec__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_GridSpec, global::autonomy_msg.Gpb_GridSpec.Builder>(internal__static_autonomy_msg_Gpb_GridSpec__Descriptor,
                new string[] { "BeliefTime", "Height", "Width", "GridOriginX", "GridOriginZ", "GridToWorldScale", });
        internal__static_autonomy_msg_Gpb_NGOSite__Descriptor = Descriptor.MessageTypes[1];
        internal__static_autonomy_msg_Gpb_NGOSite__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_NGOSite, global::autonomy_msg.Gpb_NGOSite.Builder>(internal__static_autonomy_msg_Gpb_NGOSite__Descriptor,
                new string[] { "BeliefTime", "Id", "Cells", "Supplies", "Casualties", "Civilians", });
        internal__static_autonomy_msg_Gpb_SPOI__Descriptor = Descriptor.MessageTypes[2];
        internal__static_autonomy_msg_Gpb_SPOI__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_SPOI, global::autonomy_msg.Gpb_SPOI.Builder>(internal__static_autonomy_msg_Gpb_SPOI__Descriptor,
                new string[] { "BeliefTime", "RequestTime", "ActorId", "PosX", "PosZ", });
        internal__static_autonomy_msg_Gpb_Waypoint_Override__Descriptor = Descriptor.MessageTypes[3];
        internal__static_autonomy_msg_Gpb_Waypoint_Override__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Waypoint_Override, global::autonomy_msg.Gpb_Waypoint_Override.Builder>(internal__static_autonomy_msg_Gpb_Waypoint_Override__Descriptor,
                new string[] { "BeliefTime", "RequestTime", "ActorId", "PosX", "PosY", "PosZ", });
        internal__static_autonomy_msg_Gpb_Village__Descriptor = Descriptor.MessageTypes[4];
        internal__static_autonomy_msg_Gpb_Village__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Village, global::autonomy_msg.Gpb_Village.Builder>(internal__static_autonomy_msg_Gpb_Village__Descriptor,
                new string[] { "BeliefTime", "Id", "Cells", "Supplies", "Casualties", });
        internal__static_autonomy_msg_Gpb_GridCell__Descriptor = Descriptor.MessageTypes[5];
        internal__static_autonomy_msg_Gpb_GridCell__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_GridCell, global::autonomy_msg.Gpb_GridCell.Builder>(internal__static_autonomy_msg_Gpb_GridCell__Descriptor,
                new string[] { "Row", "Col", });
        internal__static_autonomy_msg_Gpb_Actor__Descriptor = Descriptor.MessageTypes[6];
        internal__static_autonomy_msg_Gpb_Actor__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Actor, global::autonomy_msg.Gpb_Actor.Builder>(internal__static_autonomy_msg_Gpb_Actor__Descriptor,
                new string[] { "BeliefTime", "UniqueId", "Affiliation", "Type", "IsAlive", "IsCarrying", "IsWeaponized", "PosX", "PosY", "PosZ", "VelocityX", "VelocityY", "VelocityZ", });
        internal__static_autonomy_msg_Gpb_Custom__Descriptor = Descriptor.MessageTypes[7];
        internal__static_autonomy_msg_Gpb_Custom__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Custom, global::autonomy_msg.Gpb_Custom.Builder>(internal__static_autonomy_msg_Gpb_Custom__Descriptor,
                new string[] { "BeliefTime", "Data", });
        internal__static_autonomy_msg_Gpb_Base__Descriptor = Descriptor.MessageTypes[8];
        internal__static_autonomy_msg_Gpb_Base__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Base, global::autonomy_msg.Gpb_Base.Builder>(internal__static_autonomy_msg_Gpb_Base__Descriptor,
                new string[] { "BeliefTime", "Id", "Cells", "Supplies", });
        internal__static_autonomy_msg_Gpb_Terrain__Descriptor = Descriptor.MessageTypes[9];
        internal__static_autonomy_msg_Gpb_Terrain__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Terrain, global::autonomy_msg.Gpb_Terrain.Builder>(internal__static_autonomy_msg_Gpb_Terrain__Descriptor,
                new string[] { "BeliefTime", "Type", "Cells", });
        internal__static_autonomy_msg_Gpb_Mode_Command__Descriptor = Descriptor.MessageTypes[10];
        internal__static_autonomy_msg_Gpb_Mode_Command__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Mode_Command, global::autonomy_msg.Gpb_Mode_Command.Builder>(internal__static_autonomy_msg_Gpb_Mode_Command__Descriptor,
                new string[] { "BeliefTime", "RequestTime", "ActorId", "ModeId", });
        internal__static_autonomy_msg_Gpb_Waypoint__Descriptor = Descriptor.MessageTypes[11];
        internal__static_autonomy_msg_Gpb_Waypoint__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Waypoint, global::autonomy_msg.Gpb_Waypoint.Builder>(internal__static_autonomy_msg_Gpb_Waypoint__Descriptor,
                new string[] { "BeliefTime", "RequestTime", "ActorId", "PosX", "PosY", "PosZ", });
        internal__static_autonomy_msg_Gpb_Time__Descriptor = Descriptor.MessageTypes[12];
        internal__static_autonomy_msg_Gpb_Time__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Time, global::autonomy_msg.Gpb_Time.Builder>(internal__static_autonomy_msg_Gpb_Time__Descriptor,
                new string[] { "BeliefTime", "Time", });
        internal__static_autonomy_msg_Gpb_RoadCell__Descriptor = Descriptor.MessageTypes[13];
        internal__static_autonomy_msg_Gpb_RoadCell__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_RoadCell, global::autonomy_msg.Gpb_RoadCell.Builder>(internal__static_autonomy_msg_Gpb_RoadCell__Descriptor,
                new string[] { "BeliefTime", "IsRoadEnd", "Cell", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_GridSpec : pb::GeneratedMessage<Gpb_GridSpec, Gpb_GridSpec.Builder> {
    private Gpb_GridSpec() { }
    private static readonly Gpb_GridSpec defaultInstance = new Gpb_GridSpec().MakeReadOnly();
    private static readonly string[] _gpbGridSpecFieldNames = new string[] { "belief_time", "gridOrigin_x", "gridOrigin_z", "gridToWorldScale", "height", "width" };
    private static readonly uint[] _gpbGridSpecFieldTags = new uint[] { 8, 37, 45, 53, 16, 24 };
    public static Gpb_GridSpec DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_GridSpec DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_GridSpec ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_GridSpec__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_GridSpec, Gpb_GridSpec.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_GridSpec__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int HeightFieldNumber = 2;
    private bool hasHeight;
    private int height_;
    public bool HasHeight {
      get { return hasHeight; }
    }
    public int Height {
      get { return height_; }
    }
    
    public const int WidthFieldNumber = 3;
    private bool hasWidth;
    private int width_;
    public bool HasWidth {
      get { return hasWidth; }
    }
    public int Width {
      get { return width_; }
    }
    
    public const int GridOriginXFieldNumber = 4;
    private bool hasGridOriginX;
    private float gridOriginX_;
    public bool HasGridOriginX {
      get { return hasGridOriginX; }
    }
    public float GridOriginX {
      get { return gridOriginX_; }
    }
    
    public const int GridOriginZFieldNumber = 5;
    private bool hasGridOriginZ;
    private float gridOriginZ_;
    public bool HasGridOriginZ {
      get { return hasGridOriginZ; }
    }
    public float GridOriginZ {
      get { return gridOriginZ_; }
    }
    
    public const int GridToWorldScaleFieldNumber = 6;
    private bool hasGridToWorldScale;
    private float gridToWorldScale_;
    public bool HasGridToWorldScale {
      get { return hasGridToWorldScale; }
    }
    public float GridToWorldScale {
      get { return gridToWorldScale_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasHeight) return false;
        if (!hasWidth) return false;
        if (!hasGridOriginX) return false;
        if (!hasGridOriginZ) return false;
        if (!hasGridToWorldScale) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbGridSpecFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[0], BeliefTime);
      }
      if (hasHeight) {
        output.WriteInt32(2, field_names[4], Height);
      }
      if (hasWidth) {
        output.WriteInt32(3, field_names[5], Width);
      }
      if (hasGridOriginX) {
        output.WriteFloat(4, field_names[1], GridOriginX);
      }
      if (hasGridOriginZ) {
        output.WriteFloat(5, field_names[2], GridOriginZ);
      }
      if (hasGridToWorldScale) {
        output.WriteFloat(6, field_names[3], GridToWorldScale);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasHeight) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Height);
        }
        if (hasWidth) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Width);
        }
        if (hasGridOriginX) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, GridOriginX);
        }
        if (hasGridOriginZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, GridOriginZ);
        }
        if (hasGridToWorldScale) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, GridToWorldScale);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_GridSpec ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_GridSpec ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_GridSpec ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_GridSpec ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_GridSpec ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_GridSpec ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_GridSpec ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_GridSpec ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_GridSpec ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_GridSpec ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_GridSpec MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_GridSpec prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_GridSpec, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_GridSpec cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_GridSpec result;
      
      private Gpb_GridSpec PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_GridSpec original = result;
          result = new Gpb_GridSpec();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_GridSpec MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_GridSpec.Descriptor; }
      }
      
      public override Gpb_GridSpec DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_GridSpec.DefaultInstance; }
      }
      
      public override Gpb_GridSpec BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_GridSpec) {
          return MergeFrom((Gpb_GridSpec) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_GridSpec other) {
        if (other == global::autonomy_msg.Gpb_GridSpec.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasHeight) {
          Height = other.Height;
        }
        if (other.HasWidth) {
          Width = other.Width;
        }
        if (other.HasGridOriginX) {
          GridOriginX = other.GridOriginX;
        }
        if (other.HasGridOriginZ) {
          GridOriginZ = other.GridOriginZ;
        }
        if (other.HasGridToWorldScale) {
          GridToWorldScale = other.GridToWorldScale;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbGridSpecFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbGridSpecFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasHeight = input.ReadInt32(ref result.height_);
              break;
            }
            case 24: {
              result.hasWidth = input.ReadInt32(ref result.width_);
              break;
            }
            case 37: {
              result.hasGridOriginX = input.ReadFloat(ref result.gridOriginX_);
              break;
            }
            case 45: {
              result.hasGridOriginZ = input.ReadFloat(ref result.gridOriginZ_);
              break;
            }
            case 53: {
              result.hasGridToWorldScale = input.ReadFloat(ref result.gridToWorldScale_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasHeight {
        get { return result.hasHeight; }
      }
      public int Height {
        get { return result.Height; }
        set { SetHeight(value); }
      }
      public Builder SetHeight(int value) {
        PrepareBuilder();
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder ClearHeight() {
        PrepareBuilder();
        result.hasHeight = false;
        result.height_ = 0;
        return this;
      }
      
      public bool HasWidth {
        get { return result.hasWidth; }
      }
      public int Width {
        get { return result.Width; }
        set { SetWidth(value); }
      }
      public Builder SetWidth(int value) {
        PrepareBuilder();
        result.hasWidth = true;
        result.width_ = value;
        return this;
      }
      public Builder ClearWidth() {
        PrepareBuilder();
        result.hasWidth = false;
        result.width_ = 0;
        return this;
      }
      
      public bool HasGridOriginX {
        get { return result.hasGridOriginX; }
      }
      public float GridOriginX {
        get { return result.GridOriginX; }
        set { SetGridOriginX(value); }
      }
      public Builder SetGridOriginX(float value) {
        PrepareBuilder();
        result.hasGridOriginX = true;
        result.gridOriginX_ = value;
        return this;
      }
      public Builder ClearGridOriginX() {
        PrepareBuilder();
        result.hasGridOriginX = false;
        result.gridOriginX_ = 0F;
        return this;
      }
      
      public bool HasGridOriginZ {
        get { return result.hasGridOriginZ; }
      }
      public float GridOriginZ {
        get { return result.GridOriginZ; }
        set { SetGridOriginZ(value); }
      }
      public Builder SetGridOriginZ(float value) {
        PrepareBuilder();
        result.hasGridOriginZ = true;
        result.gridOriginZ_ = value;
        return this;
      }
      public Builder ClearGridOriginZ() {
        PrepareBuilder();
        result.hasGridOriginZ = false;
        result.gridOriginZ_ = 0F;
        return this;
      }
      
      public bool HasGridToWorldScale {
        get { return result.hasGridToWorldScale; }
      }
      public float GridToWorldScale {
        get { return result.GridToWorldScale; }
        set { SetGridToWorldScale(value); }
      }
      public Builder SetGridToWorldScale(float value) {
        PrepareBuilder();
        result.hasGridToWorldScale = true;
        result.gridToWorldScale_ = value;
        return this;
      }
      public Builder ClearGridToWorldScale() {
        PrepareBuilder();
        result.hasGridToWorldScale = false;
        result.gridToWorldScale_ = 0F;
        return this;
      }
    }
    static Gpb_GridSpec() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_NGOSite : pb::GeneratedMessage<Gpb_NGOSite, Gpb_NGOSite.Builder> {
    private Gpb_NGOSite() { }
    private static readonly Gpb_NGOSite defaultInstance = new Gpb_NGOSite().MakeReadOnly();
    private static readonly string[] _gpbNGOSiteFieldNames = new string[] { "belief_time", "casualties", "cells", "civilians", "id", "supplies" };
    private static readonly uint[] _gpbNGOSiteFieldTags = new uint[] { 8, 45, 26, 53, 16, 37 };
    public static Gpb_NGOSite DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_NGOSite DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_NGOSite ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_NGOSite__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_NGOSite, Gpb_NGOSite.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_NGOSite__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int IdFieldNumber = 2;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int CellsFieldNumber = 3;
    private pbc::PopsicleList<global::autonomy_msg.Gpb_GridCell> cells_ = new pbc::PopsicleList<global::autonomy_msg.Gpb_GridCell>();
    public scg::IList<global::autonomy_msg.Gpb_GridCell> CellsList {
      get { return cells_; }
    }
    public int CellsCount {
      get { return cells_.Count; }
    }
    public global::autonomy_msg.Gpb_GridCell GetCells(int index) {
      return cells_[index];
    }
    
    public const int SuppliesFieldNumber = 4;
    private bool hasSupplies;
    private float supplies_;
    public bool HasSupplies {
      get { return hasSupplies; }
    }
    public float Supplies {
      get { return supplies_; }
    }
    
    public const int CasualtiesFieldNumber = 5;
    private bool hasCasualties;
    private float casualties_;
    public bool HasCasualties {
      get { return hasCasualties; }
    }
    public float Casualties {
      get { return casualties_; }
    }
    
    public const int CiviliansFieldNumber = 6;
    private bool hasCivilians;
    private float civilians_;
    public bool HasCivilians {
      get { return hasCivilians; }
    }
    public float Civilians {
      get { return civilians_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasId) return false;
        if (!hasSupplies) return false;
        if (!hasCasualties) return false;
        if (!hasCivilians) return false;
        foreach (global::autonomy_msg.Gpb_GridCell element in CellsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbNGOSiteFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[0], BeliefTime);
      }
      if (hasId) {
        output.WriteInt32(2, field_names[4], Id);
      }
      if (cells_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], cells_);
      }
      if (hasSupplies) {
        output.WriteFloat(4, field_names[5], Supplies);
      }
      if (hasCasualties) {
        output.WriteFloat(5, field_names[1], Casualties);
      }
      if (hasCivilians) {
        output.WriteFloat(6, field_names[3], Civilians);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Id);
        }
        foreach (global::autonomy_msg.Gpb_GridCell element in CellsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasSupplies) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, Supplies);
        }
        if (hasCasualties) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, Casualties);
        }
        if (hasCivilians) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, Civilians);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_NGOSite ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_NGOSite ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_NGOSite ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_NGOSite ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_NGOSite ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_NGOSite ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_NGOSite ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_NGOSite ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_NGOSite ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_NGOSite ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_NGOSite MakeReadOnly() {
      cells_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_NGOSite prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_NGOSite, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_NGOSite cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_NGOSite result;
      
      private Gpb_NGOSite PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_NGOSite original = result;
          result = new Gpb_NGOSite();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_NGOSite MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_NGOSite.Descriptor; }
      }
      
      public override Gpb_NGOSite DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_NGOSite.DefaultInstance; }
      }
      
      public override Gpb_NGOSite BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_NGOSite) {
          return MergeFrom((Gpb_NGOSite) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_NGOSite other) {
        if (other == global::autonomy_msg.Gpb_NGOSite.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.cells_.Count != 0) {
          result.cells_.Add(other.cells_);
        }
        if (other.HasSupplies) {
          Supplies = other.Supplies;
        }
        if (other.HasCasualties) {
          Casualties = other.Casualties;
        }
        if (other.HasCivilians) {
          Civilians = other.Civilians;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbNGOSiteFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbNGOSiteFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.cells_, global::autonomy_msg.Gpb_GridCell.DefaultInstance, extensionRegistry);
              break;
            }
            case 37: {
              result.hasSupplies = input.ReadFloat(ref result.supplies_);
              break;
            }
            case 45: {
              result.hasCasualties = input.ReadFloat(ref result.casualties_);
              break;
            }
            case 53: {
              result.hasCivilians = input.ReadFloat(ref result.civilians_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::autonomy_msg.Gpb_GridCell> CellsList {
        get { return PrepareBuilder().cells_; }
      }
      public int CellsCount {
        get { return result.CellsCount; }
      }
      public global::autonomy_msg.Gpb_GridCell GetCells(int index) {
        return result.GetCells(index);
      }
      public Builder SetCells(int index, global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_[index] = value;
        return this;
      }
      public Builder SetCells(int index, global::autonomy_msg.Gpb_GridCell.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cells_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCells(global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_.Add(value);
        return this;
      }
      public Builder AddCells(global::autonomy_msg.Gpb_GridCell.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cells_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCells(scg::IEnumerable<global::autonomy_msg.Gpb_GridCell> values) {
        PrepareBuilder();
        result.cells_.Add(values);
        return this;
      }
      public Builder ClearCells() {
        PrepareBuilder();
        result.cells_.Clear();
        return this;
      }
      
      public bool HasSupplies {
        get { return result.hasSupplies; }
      }
      public float Supplies {
        get { return result.Supplies; }
        set { SetSupplies(value); }
      }
      public Builder SetSupplies(float value) {
        PrepareBuilder();
        result.hasSupplies = true;
        result.supplies_ = value;
        return this;
      }
      public Builder ClearSupplies() {
        PrepareBuilder();
        result.hasSupplies = false;
        result.supplies_ = 0F;
        return this;
      }
      
      public bool HasCasualties {
        get { return result.hasCasualties; }
      }
      public float Casualties {
        get { return result.Casualties; }
        set { SetCasualties(value); }
      }
      public Builder SetCasualties(float value) {
        PrepareBuilder();
        result.hasCasualties = true;
        result.casualties_ = value;
        return this;
      }
      public Builder ClearCasualties() {
        PrepareBuilder();
        result.hasCasualties = false;
        result.casualties_ = 0F;
        return this;
      }
      
      public bool HasCivilians {
        get { return result.hasCivilians; }
      }
      public float Civilians {
        get { return result.Civilians; }
        set { SetCivilians(value); }
      }
      public Builder SetCivilians(float value) {
        PrepareBuilder();
        result.hasCivilians = true;
        result.civilians_ = value;
        return this;
      }
      public Builder ClearCivilians() {
        PrepareBuilder();
        result.hasCivilians = false;
        result.civilians_ = 0F;
        return this;
      }
    }
    static Gpb_NGOSite() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_SPOI : pb::GeneratedMessage<Gpb_SPOI, Gpb_SPOI.Builder> {
    private Gpb_SPOI() { }
    private static readonly Gpb_SPOI defaultInstance = new Gpb_SPOI().MakeReadOnly();
    private static readonly string[] _gpbSPOIFieldNames = new string[] { "actor_id", "belief_time", "pos_x", "pos_z", "request_time" };
    private static readonly uint[] _gpbSPOIFieldTags = new uint[] { 24, 8, 37, 45, 16 };
    public static Gpb_SPOI DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_SPOI DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_SPOI ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_SPOI__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_SPOI, Gpb_SPOI.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_SPOI__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int RequestTimeFieldNumber = 2;
    private bool hasRequestTime;
    private ulong requestTime_;
    public bool HasRequestTime {
      get { return hasRequestTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RequestTime {
      get { return requestTime_; }
    }
    
    public const int ActorIdFieldNumber = 3;
    private bool hasActorId;
    private int actorId_;
    public bool HasActorId {
      get { return hasActorId; }
    }
    public int ActorId {
      get { return actorId_; }
    }
    
    public const int PosXFieldNumber = 4;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosZFieldNumber = 5;
    private bool hasPosZ;
    private float posZ_;
    public bool HasPosZ {
      get { return hasPosZ; }
    }
    public float PosZ {
      get { return posZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasRequestTime) return false;
        if (!hasActorId) return false;
        if (!hasPosX) return false;
        if (!hasPosZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbSPOIFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[1], BeliefTime);
      }
      if (hasRequestTime) {
        output.WriteUInt64(2, field_names[4], RequestTime);
      }
      if (hasActorId) {
        output.WriteInt32(3, field_names[0], ActorId);
      }
      if (hasPosX) {
        output.WriteFloat(4, field_names[2], PosX);
      }
      if (hasPosZ) {
        output.WriteFloat(5, field_names[3], PosZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasRequestTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, RequestTime);
        }
        if (hasActorId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ActorId);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, PosX);
        }
        if (hasPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, PosZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_SPOI ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_SPOI ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_SPOI ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_SPOI MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_SPOI prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_SPOI, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_SPOI cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_SPOI result;
      
      private Gpb_SPOI PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_SPOI original = result;
          result = new Gpb_SPOI();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_SPOI MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_SPOI.Descriptor; }
      }
      
      public override Gpb_SPOI DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_SPOI.DefaultInstance; }
      }
      
      public override Gpb_SPOI BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_SPOI) {
          return MergeFrom((Gpb_SPOI) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_SPOI other) {
        if (other == global::autonomy_msg.Gpb_SPOI.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasRequestTime) {
          RequestTime = other.RequestTime;
        }
        if (other.HasActorId) {
          ActorId = other.ActorId;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosZ) {
          PosZ = other.PosZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbSPOIFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbSPOIFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasRequestTime = input.ReadUInt64(ref result.requestTime_);
              break;
            }
            case 24: {
              result.hasActorId = input.ReadInt32(ref result.actorId_);
              break;
            }
            case 37: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 45: {
              result.hasPosZ = input.ReadFloat(ref result.posZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasRequestTime {
        get { return result.hasRequestTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RequestTime {
        get { return result.RequestTime; }
        set { SetRequestTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestTime(ulong value) {
        PrepareBuilder();
        result.hasRequestTime = true;
        result.requestTime_ = value;
        return this;
      }
      public Builder ClearRequestTime() {
        PrepareBuilder();
        result.hasRequestTime = false;
        result.requestTime_ = 0UL;
        return this;
      }
      
      public bool HasActorId {
        get { return result.hasActorId; }
      }
      public int ActorId {
        get { return result.ActorId; }
        set { SetActorId(value); }
      }
      public Builder SetActorId(int value) {
        PrepareBuilder();
        result.hasActorId = true;
        result.actorId_ = value;
        return this;
      }
      public Builder ClearActorId() {
        PrepareBuilder();
        result.hasActorId = false;
        result.actorId_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosZ {
        get { return result.hasPosZ; }
      }
      public float PosZ {
        get { return result.PosZ; }
        set { SetPosZ(value); }
      }
      public Builder SetPosZ(float value) {
        PrepareBuilder();
        result.hasPosZ = true;
        result.posZ_ = value;
        return this;
      }
      public Builder ClearPosZ() {
        PrepareBuilder();
        result.hasPosZ = false;
        result.posZ_ = 0F;
        return this;
      }
    }
    static Gpb_SPOI() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Waypoint_Override : pb::GeneratedMessage<Gpb_Waypoint_Override, Gpb_Waypoint_Override.Builder> {
    private Gpb_Waypoint_Override() { }
    private static readonly Gpb_Waypoint_Override defaultInstance = new Gpb_Waypoint_Override().MakeReadOnly();
    private static readonly string[] _gpbWaypointOverrideFieldNames = new string[] { "actor_id", "belief_time", "pos_x", "pos_y", "pos_z", "request_time" };
    private static readonly uint[] _gpbWaypointOverrideFieldTags = new uint[] { 24, 8, 37, 45, 53, 16 };
    public static Gpb_Waypoint_Override DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Waypoint_Override DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Waypoint_Override ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Waypoint_Override__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Waypoint_Override, Gpb_Waypoint_Override.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Waypoint_Override__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int RequestTimeFieldNumber = 2;
    private bool hasRequestTime;
    private ulong requestTime_;
    public bool HasRequestTime {
      get { return hasRequestTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RequestTime {
      get { return requestTime_; }
    }
    
    public const int ActorIdFieldNumber = 3;
    private bool hasActorId;
    private int actorId_;
    public bool HasActorId {
      get { return hasActorId; }
    }
    public int ActorId {
      get { return actorId_; }
    }
    
    public const int PosXFieldNumber = 4;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 5;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public const int PosZFieldNumber = 6;
    private bool hasPosZ;
    private float posZ_;
    public bool HasPosZ {
      get { return hasPosZ; }
    }
    public float PosZ {
      get { return posZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasRequestTime) return false;
        if (!hasActorId) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        if (!hasPosZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbWaypointOverrideFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[1], BeliefTime);
      }
      if (hasRequestTime) {
        output.WriteUInt64(2, field_names[5], RequestTime);
      }
      if (hasActorId) {
        output.WriteInt32(3, field_names[0], ActorId);
      }
      if (hasPosX) {
        output.WriteFloat(4, field_names[2], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(5, field_names[3], PosY);
      }
      if (hasPosZ) {
        output.WriteFloat(6, field_names[4], PosZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasRequestTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, RequestTime);
        }
        if (hasActorId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ActorId);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, PosY);
        }
        if (hasPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, PosZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Waypoint_Override ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Waypoint_Override MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Waypoint_Override prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Waypoint_Override, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Waypoint_Override cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Waypoint_Override result;
      
      private Gpb_Waypoint_Override PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Waypoint_Override original = result;
          result = new Gpb_Waypoint_Override();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Waypoint_Override MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Waypoint_Override.Descriptor; }
      }
      
      public override Gpb_Waypoint_Override DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Waypoint_Override.DefaultInstance; }
      }
      
      public override Gpb_Waypoint_Override BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Waypoint_Override) {
          return MergeFrom((Gpb_Waypoint_Override) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Waypoint_Override other) {
        if (other == global::autonomy_msg.Gpb_Waypoint_Override.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasRequestTime) {
          RequestTime = other.RequestTime;
        }
        if (other.HasActorId) {
          ActorId = other.ActorId;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        if (other.HasPosZ) {
          PosZ = other.PosZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbWaypointOverrideFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbWaypointOverrideFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasRequestTime = input.ReadUInt64(ref result.requestTime_);
              break;
            }
            case 24: {
              result.hasActorId = input.ReadInt32(ref result.actorId_);
              break;
            }
            case 37: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 45: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
            case 53: {
              result.hasPosZ = input.ReadFloat(ref result.posZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasRequestTime {
        get { return result.hasRequestTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RequestTime {
        get { return result.RequestTime; }
        set { SetRequestTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestTime(ulong value) {
        PrepareBuilder();
        result.hasRequestTime = true;
        result.requestTime_ = value;
        return this;
      }
      public Builder ClearRequestTime() {
        PrepareBuilder();
        result.hasRequestTime = false;
        result.requestTime_ = 0UL;
        return this;
      }
      
      public bool HasActorId {
        get { return result.hasActorId; }
      }
      public int ActorId {
        get { return result.ActorId; }
        set { SetActorId(value); }
      }
      public Builder SetActorId(int value) {
        PrepareBuilder();
        result.hasActorId = true;
        result.actorId_ = value;
        return this;
      }
      public Builder ClearActorId() {
        PrepareBuilder();
        result.hasActorId = false;
        result.actorId_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
      
      public bool HasPosZ {
        get { return result.hasPosZ; }
      }
      public float PosZ {
        get { return result.PosZ; }
        set { SetPosZ(value); }
      }
      public Builder SetPosZ(float value) {
        PrepareBuilder();
        result.hasPosZ = true;
        result.posZ_ = value;
        return this;
      }
      public Builder ClearPosZ() {
        PrepareBuilder();
        result.hasPosZ = false;
        result.posZ_ = 0F;
        return this;
      }
    }
    static Gpb_Waypoint_Override() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Village : pb::GeneratedMessage<Gpb_Village, Gpb_Village.Builder> {
    private Gpb_Village() { }
    private static readonly Gpb_Village defaultInstance = new Gpb_Village().MakeReadOnly();
    private static readonly string[] _gpbVillageFieldNames = new string[] { "belief_time", "casualties", "cells", "id", "supplies" };
    private static readonly uint[] _gpbVillageFieldTags = new uint[] { 8, 45, 26, 16, 37 };
    public static Gpb_Village DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Village DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Village ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Village__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Village, Gpb_Village.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Village__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int IdFieldNumber = 2;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int CellsFieldNumber = 3;
    private pbc::PopsicleList<global::autonomy_msg.Gpb_GridCell> cells_ = new pbc::PopsicleList<global::autonomy_msg.Gpb_GridCell>();
    public scg::IList<global::autonomy_msg.Gpb_GridCell> CellsList {
      get { return cells_; }
    }
    public int CellsCount {
      get { return cells_.Count; }
    }
    public global::autonomy_msg.Gpb_GridCell GetCells(int index) {
      return cells_[index];
    }
    
    public const int SuppliesFieldNumber = 4;
    private bool hasSupplies;
    private float supplies_;
    public bool HasSupplies {
      get { return hasSupplies; }
    }
    public float Supplies {
      get { return supplies_; }
    }
    
    public const int CasualtiesFieldNumber = 5;
    private bool hasCasualties;
    private float casualties_;
    public bool HasCasualties {
      get { return hasCasualties; }
    }
    public float Casualties {
      get { return casualties_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasId) return false;
        if (!hasSupplies) return false;
        if (!hasCasualties) return false;
        foreach (global::autonomy_msg.Gpb_GridCell element in CellsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbVillageFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[0], BeliefTime);
      }
      if (hasId) {
        output.WriteInt32(2, field_names[3], Id);
      }
      if (cells_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], cells_);
      }
      if (hasSupplies) {
        output.WriteFloat(4, field_names[4], Supplies);
      }
      if (hasCasualties) {
        output.WriteFloat(5, field_names[1], Casualties);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Id);
        }
        foreach (global::autonomy_msg.Gpb_GridCell element in CellsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasSupplies) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, Supplies);
        }
        if (hasCasualties) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, Casualties);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Village ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Village ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Village ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Village ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Village ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Village ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Village ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Village ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Village ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Village ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Village MakeReadOnly() {
      cells_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Village prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Village, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Village cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Village result;
      
      private Gpb_Village PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Village original = result;
          result = new Gpb_Village();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Village MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Village.Descriptor; }
      }
      
      public override Gpb_Village DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Village.DefaultInstance; }
      }
      
      public override Gpb_Village BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Village) {
          return MergeFrom((Gpb_Village) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Village other) {
        if (other == global::autonomy_msg.Gpb_Village.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.cells_.Count != 0) {
          result.cells_.Add(other.cells_);
        }
        if (other.HasSupplies) {
          Supplies = other.Supplies;
        }
        if (other.HasCasualties) {
          Casualties = other.Casualties;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbVillageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbVillageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.cells_, global::autonomy_msg.Gpb_GridCell.DefaultInstance, extensionRegistry);
              break;
            }
            case 37: {
              result.hasSupplies = input.ReadFloat(ref result.supplies_);
              break;
            }
            case 45: {
              result.hasCasualties = input.ReadFloat(ref result.casualties_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::autonomy_msg.Gpb_GridCell> CellsList {
        get { return PrepareBuilder().cells_; }
      }
      public int CellsCount {
        get { return result.CellsCount; }
      }
      public global::autonomy_msg.Gpb_GridCell GetCells(int index) {
        return result.GetCells(index);
      }
      public Builder SetCells(int index, global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_[index] = value;
        return this;
      }
      public Builder SetCells(int index, global::autonomy_msg.Gpb_GridCell.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cells_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCells(global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_.Add(value);
        return this;
      }
      public Builder AddCells(global::autonomy_msg.Gpb_GridCell.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cells_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCells(scg::IEnumerable<global::autonomy_msg.Gpb_GridCell> values) {
        PrepareBuilder();
        result.cells_.Add(values);
        return this;
      }
      public Builder ClearCells() {
        PrepareBuilder();
        result.cells_.Clear();
        return this;
      }
      
      public bool HasSupplies {
        get { return result.hasSupplies; }
      }
      public float Supplies {
        get { return result.Supplies; }
        set { SetSupplies(value); }
      }
      public Builder SetSupplies(float value) {
        PrepareBuilder();
        result.hasSupplies = true;
        result.supplies_ = value;
        return this;
      }
      public Builder ClearSupplies() {
        PrepareBuilder();
        result.hasSupplies = false;
        result.supplies_ = 0F;
        return this;
      }
      
      public bool HasCasualties {
        get { return result.hasCasualties; }
      }
      public float Casualties {
        get { return result.Casualties; }
        set { SetCasualties(value); }
      }
      public Builder SetCasualties(float value) {
        PrepareBuilder();
        result.hasCasualties = true;
        result.casualties_ = value;
        return this;
      }
      public Builder ClearCasualties() {
        PrepareBuilder();
        result.hasCasualties = false;
        result.casualties_ = 0F;
        return this;
      }
    }
    static Gpb_Village() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_GridCell : pb::GeneratedMessage<Gpb_GridCell, Gpb_GridCell.Builder> {
    private Gpb_GridCell() { }
    private static readonly Gpb_GridCell defaultInstance = new Gpb_GridCell().MakeReadOnly();
    private static readonly string[] _gpbGridCellFieldNames = new string[] { "col", "row" };
    private static readonly uint[] _gpbGridCellFieldTags = new uint[] { 16, 8 };
    public static Gpb_GridCell DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_GridCell DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_GridCell ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_GridCell__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_GridCell, Gpb_GridCell.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_GridCell__FieldAccessorTable; }
    }
    
    public const int RowFieldNumber = 1;
    private bool hasRow;
    private int row_;
    public bool HasRow {
      get { return hasRow; }
    }
    public int Row {
      get { return row_; }
    }
    
    public const int ColFieldNumber = 2;
    private bool hasCol;
    private int col_;
    public bool HasCol {
      get { return hasCol; }
    }
    public int Col {
      get { return col_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRow) return false;
        if (!hasCol) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbGridCellFieldNames;
      if (hasRow) {
        output.WriteInt32(1, field_names[1], Row);
      }
      if (hasCol) {
        output.WriteInt32(2, field_names[0], Col);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRow) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Row);
        }
        if (hasCol) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Col);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_GridCell ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_GridCell ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_GridCell ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_GridCell ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_GridCell ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_GridCell ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_GridCell ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_GridCell ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_GridCell ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_GridCell ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_GridCell MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_GridCell prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_GridCell, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_GridCell cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_GridCell result;
      
      private Gpb_GridCell PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_GridCell original = result;
          result = new Gpb_GridCell();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_GridCell MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_GridCell.Descriptor; }
      }
      
      public override Gpb_GridCell DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_GridCell.DefaultInstance; }
      }
      
      public override Gpb_GridCell BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_GridCell) {
          return MergeFrom((Gpb_GridCell) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_GridCell other) {
        if (other == global::autonomy_msg.Gpb_GridCell.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRow) {
          Row = other.Row;
        }
        if (other.HasCol) {
          Col = other.Col;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbGridCellFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbGridCellFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRow = input.ReadInt32(ref result.row_);
              break;
            }
            case 16: {
              result.hasCol = input.ReadInt32(ref result.col_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRow {
        get { return result.hasRow; }
      }
      public int Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(int value) {
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = 0;
        return this;
      }
      
      public bool HasCol {
        get { return result.hasCol; }
      }
      public int Col {
        get { return result.Col; }
        set { SetCol(value); }
      }
      public Builder SetCol(int value) {
        PrepareBuilder();
        result.hasCol = true;
        result.col_ = value;
        return this;
      }
      public Builder ClearCol() {
        PrepareBuilder();
        result.hasCol = false;
        result.col_ = 0;
        return this;
      }
    }
    static Gpb_GridCell() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Actor : pb::GeneratedMessage<Gpb_Actor, Gpb_Actor.Builder> {
    private Gpb_Actor() { }
    private static readonly Gpb_Actor defaultInstance = new Gpb_Actor().MakeReadOnly();
    private static readonly string[] _gpbActorFieldNames = new string[] { "affiliation", "belief_time", "is_alive", "is_carrying", "is_weaponized", "pos_x", "pos_y", "pos_z", "type", "unique_id", "velocity_x", "velocity_y", "velocity_z" };
    private static readonly uint[] _gpbActorFieldTags = new uint[] { 24, 8, 40, 48, 56, 69, 77, 85, 32, 16, 93, 101, 109 };
    public static Gpb_Actor DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Actor DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Actor ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Actor__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Actor, Gpb_Actor.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Actor__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int UniqueIdFieldNumber = 2;
    private bool hasUniqueId;
    private int uniqueId_;
    public bool HasUniqueId {
      get { return hasUniqueId; }
    }
    public int UniqueId {
      get { return uniqueId_; }
    }
    
    public const int AffiliationFieldNumber = 3;
    private bool hasAffiliation;
    private int affiliation_;
    public bool HasAffiliation {
      get { return hasAffiliation; }
    }
    public int Affiliation {
      get { return affiliation_; }
    }
    
    public const int TypeFieldNumber = 4;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int IsAliveFieldNumber = 5;
    private bool hasIsAlive;
    private bool isAlive_;
    public bool HasIsAlive {
      get { return hasIsAlive; }
    }
    public bool IsAlive {
      get { return isAlive_; }
    }
    
    public const int IsCarryingFieldNumber = 6;
    private bool hasIsCarrying;
    private int isCarrying_;
    public bool HasIsCarrying {
      get { return hasIsCarrying; }
    }
    public int IsCarrying {
      get { return isCarrying_; }
    }
    
    public const int IsWeaponizedFieldNumber = 7;
    private bool hasIsWeaponized;
    private bool isWeaponized_;
    public bool HasIsWeaponized {
      get { return hasIsWeaponized; }
    }
    public bool IsWeaponized {
      get { return isWeaponized_; }
    }
    
    public const int PosXFieldNumber = 8;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 9;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public const int PosZFieldNumber = 10;
    private bool hasPosZ;
    private float posZ_;
    public bool HasPosZ {
      get { return hasPosZ; }
    }
    public float PosZ {
      get { return posZ_; }
    }
    
    public const int VelocityXFieldNumber = 11;
    private bool hasVelocityX;
    private float velocityX_;
    public bool HasVelocityX {
      get { return hasVelocityX; }
    }
    public float VelocityX {
      get { return velocityX_; }
    }
    
    public const int VelocityYFieldNumber = 12;
    private bool hasVelocityY;
    private float velocityY_;
    public bool HasVelocityY {
      get { return hasVelocityY; }
    }
    public float VelocityY {
      get { return velocityY_; }
    }
    
    public const int VelocityZFieldNumber = 13;
    private bool hasVelocityZ;
    private float velocityZ_;
    public bool HasVelocityZ {
      get { return hasVelocityZ; }
    }
    public float VelocityZ {
      get { return velocityZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasUniqueId) return false;
        if (!hasAffiliation) return false;
        if (!hasType) return false;
        if (!hasIsAlive) return false;
        if (!hasIsCarrying) return false;
        if (!hasIsWeaponized) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        if (!hasPosZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbActorFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[1], BeliefTime);
      }
      if (hasUniqueId) {
        output.WriteInt32(2, field_names[9], UniqueId);
      }
      if (hasAffiliation) {
        output.WriteInt32(3, field_names[0], Affiliation);
      }
      if (hasType) {
        output.WriteInt32(4, field_names[8], Type);
      }
      if (hasIsAlive) {
        output.WriteBool(5, field_names[2], IsAlive);
      }
      if (hasIsCarrying) {
        output.WriteInt32(6, field_names[3], IsCarrying);
      }
      if (hasIsWeaponized) {
        output.WriteBool(7, field_names[4], IsWeaponized);
      }
      if (hasPosX) {
        output.WriteFloat(8, field_names[5], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(9, field_names[6], PosY);
      }
      if (hasPosZ) {
        output.WriteFloat(10, field_names[7], PosZ);
      }
      if (hasVelocityX) {
        output.WriteFloat(11, field_names[10], VelocityX);
      }
      if (hasVelocityY) {
        output.WriteFloat(12, field_names[11], VelocityY);
      }
      if (hasVelocityZ) {
        output.WriteFloat(13, field_names[12], VelocityZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasUniqueId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, UniqueId);
        }
        if (hasAffiliation) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Affiliation);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Type);
        }
        if (hasIsAlive) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, IsAlive);
        }
        if (hasIsCarrying) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, IsCarrying);
        }
        if (hasIsWeaponized) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, IsWeaponized);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(8, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(9, PosY);
        }
        if (hasPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(10, PosZ);
        }
        if (hasVelocityX) {
          size += pb::CodedOutputStream.ComputeFloatSize(11, VelocityX);
        }
        if (hasVelocityY) {
          size += pb::CodedOutputStream.ComputeFloatSize(12, VelocityY);
        }
        if (hasVelocityZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(13, VelocityZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Actor ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Actor ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Actor ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Actor MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Actor prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Actor, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Actor cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Actor result;
      
      private Gpb_Actor PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Actor original = result;
          result = new Gpb_Actor();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Actor MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Actor.Descriptor; }
      }
      
      public override Gpb_Actor DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Actor.DefaultInstance; }
      }
      
      public override Gpb_Actor BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Actor) {
          return MergeFrom((Gpb_Actor) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Actor other) {
        if (other == global::autonomy_msg.Gpb_Actor.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasUniqueId) {
          UniqueId = other.UniqueId;
        }
        if (other.HasAffiliation) {
          Affiliation = other.Affiliation;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasIsAlive) {
          IsAlive = other.IsAlive;
        }
        if (other.HasIsCarrying) {
          IsCarrying = other.IsCarrying;
        }
        if (other.HasIsWeaponized) {
          IsWeaponized = other.IsWeaponized;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        if (other.HasPosZ) {
          PosZ = other.PosZ;
        }
        if (other.HasVelocityX) {
          VelocityX = other.VelocityX;
        }
        if (other.HasVelocityY) {
          VelocityY = other.VelocityY;
        }
        if (other.HasVelocityZ) {
          VelocityZ = other.VelocityZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbActorFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbActorFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasUniqueId = input.ReadInt32(ref result.uniqueId_);
              break;
            }
            case 24: {
              result.hasAffiliation = input.ReadInt32(ref result.affiliation_);
              break;
            }
            case 32: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 40: {
              result.hasIsAlive = input.ReadBool(ref result.isAlive_);
              break;
            }
            case 48: {
              result.hasIsCarrying = input.ReadInt32(ref result.isCarrying_);
              break;
            }
            case 56: {
              result.hasIsWeaponized = input.ReadBool(ref result.isWeaponized_);
              break;
            }
            case 69: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 77: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
            case 85: {
              result.hasPosZ = input.ReadFloat(ref result.posZ_);
              break;
            }
            case 93: {
              result.hasVelocityX = input.ReadFloat(ref result.velocityX_);
              break;
            }
            case 101: {
              result.hasVelocityY = input.ReadFloat(ref result.velocityY_);
              break;
            }
            case 109: {
              result.hasVelocityZ = input.ReadFloat(ref result.velocityZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasUniqueId {
        get { return result.hasUniqueId; }
      }
      public int UniqueId {
        get { return result.UniqueId; }
        set { SetUniqueId(value); }
      }
      public Builder SetUniqueId(int value) {
        PrepareBuilder();
        result.hasUniqueId = true;
        result.uniqueId_ = value;
        return this;
      }
      public Builder ClearUniqueId() {
        PrepareBuilder();
        result.hasUniqueId = false;
        result.uniqueId_ = 0;
        return this;
      }
      
      public bool HasAffiliation {
        get { return result.hasAffiliation; }
      }
      public int Affiliation {
        get { return result.Affiliation; }
        set { SetAffiliation(value); }
      }
      public Builder SetAffiliation(int value) {
        PrepareBuilder();
        result.hasAffiliation = true;
        result.affiliation_ = value;
        return this;
      }
      public Builder ClearAffiliation() {
        PrepareBuilder();
        result.hasAffiliation = false;
        result.affiliation_ = 0;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasIsAlive {
        get { return result.hasIsAlive; }
      }
      public bool IsAlive {
        get { return result.IsAlive; }
        set { SetIsAlive(value); }
      }
      public Builder SetIsAlive(bool value) {
        PrepareBuilder();
        result.hasIsAlive = true;
        result.isAlive_ = value;
        return this;
      }
      public Builder ClearIsAlive() {
        PrepareBuilder();
        result.hasIsAlive = false;
        result.isAlive_ = false;
        return this;
      }
      
      public bool HasIsCarrying {
        get { return result.hasIsCarrying; }
      }
      public int IsCarrying {
        get { return result.IsCarrying; }
        set { SetIsCarrying(value); }
      }
      public Builder SetIsCarrying(int value) {
        PrepareBuilder();
        result.hasIsCarrying = true;
        result.isCarrying_ = value;
        return this;
      }
      public Builder ClearIsCarrying() {
        PrepareBuilder();
        result.hasIsCarrying = false;
        result.isCarrying_ = 0;
        return this;
      }
      
      public bool HasIsWeaponized {
        get { return result.hasIsWeaponized; }
      }
      public bool IsWeaponized {
        get { return result.IsWeaponized; }
        set { SetIsWeaponized(value); }
      }
      public Builder SetIsWeaponized(bool value) {
        PrepareBuilder();
        result.hasIsWeaponized = true;
        result.isWeaponized_ = value;
        return this;
      }
      public Builder ClearIsWeaponized() {
        PrepareBuilder();
        result.hasIsWeaponized = false;
        result.isWeaponized_ = false;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
      
      public bool HasPosZ {
        get { return result.hasPosZ; }
      }
      public float PosZ {
        get { return result.PosZ; }
        set { SetPosZ(value); }
      }
      public Builder SetPosZ(float value) {
        PrepareBuilder();
        result.hasPosZ = true;
        result.posZ_ = value;
        return this;
      }
      public Builder ClearPosZ() {
        PrepareBuilder();
        result.hasPosZ = false;
        result.posZ_ = 0F;
        return this;
      }
      
      public bool HasVelocityX {
        get { return result.hasVelocityX; }
      }
      public float VelocityX {
        get { return result.VelocityX; }
        set { SetVelocityX(value); }
      }
      public Builder SetVelocityX(float value) {
        PrepareBuilder();
        result.hasVelocityX = true;
        result.velocityX_ = value;
        return this;
      }
      public Builder ClearVelocityX() {
        PrepareBuilder();
        result.hasVelocityX = false;
        result.velocityX_ = 0F;
        return this;
      }
      
      public bool HasVelocityY {
        get { return result.hasVelocityY; }
      }
      public float VelocityY {
        get { return result.VelocityY; }
        set { SetVelocityY(value); }
      }
      public Builder SetVelocityY(float value) {
        PrepareBuilder();
        result.hasVelocityY = true;
        result.velocityY_ = value;
        return this;
      }
      public Builder ClearVelocityY() {
        PrepareBuilder();
        result.hasVelocityY = false;
        result.velocityY_ = 0F;
        return this;
      }
      
      public bool HasVelocityZ {
        get { return result.hasVelocityZ; }
      }
      public float VelocityZ {
        get { return result.VelocityZ; }
        set { SetVelocityZ(value); }
      }
      public Builder SetVelocityZ(float value) {
        PrepareBuilder();
        result.hasVelocityZ = true;
        result.velocityZ_ = value;
        return this;
      }
      public Builder ClearVelocityZ() {
        PrepareBuilder();
        result.hasVelocityZ = false;
        result.velocityZ_ = 0F;
        return this;
      }
    }
    static Gpb_Actor() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Custom : pb::GeneratedMessage<Gpb_Custom, Gpb_Custom.Builder> {
    private Gpb_Custom() { }
    private static readonly Gpb_Custom defaultInstance = new Gpb_Custom().MakeReadOnly();
    private static readonly string[] _gpbCustomFieldNames = new string[] { "belief_time", "data" };
    private static readonly uint[] _gpbCustomFieldTags = new uint[] { 8, 18 };
    public static Gpb_Custom DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Custom DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Custom ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Custom__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Custom, Gpb_Custom.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Custom__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public bool HasData {
      get { return hasData; }
    }
    public pb::ByteString Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasData) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbCustomFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[0], BeliefTime);
      }
      if (hasData) {
        output.WriteBytes(2, field_names[1], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasData) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Custom ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Custom ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Custom ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Custom ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Custom ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Custom ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Custom ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Custom ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Custom ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Custom ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Custom MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Custom prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Custom, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Custom cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Custom result;
      
      private Gpb_Custom PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Custom original = result;
          result = new Gpb_Custom();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Custom MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Custom.Descriptor; }
      }
      
      public override Gpb_Custom DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Custom.DefaultInstance; }
      }
      
      public override Gpb_Custom BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Custom) {
          return MergeFrom((Gpb_Custom) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Custom other) {
        if (other == global::autonomy_msg.Gpb_Custom.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbCustomFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbCustomFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 18: {
              result.hasData = input.ReadBytes(ref result.data_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasData {
        get { return result.hasData; }
      }
      public pb::ByteString Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Gpb_Custom() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Base : pb::GeneratedMessage<Gpb_Base, Gpb_Base.Builder> {
    private Gpb_Base() { }
    private static readonly Gpb_Base defaultInstance = new Gpb_Base().MakeReadOnly();
    private static readonly string[] _gpbBaseFieldNames = new string[] { "belief_time", "cells", "id", "supplies" };
    private static readonly uint[] _gpbBaseFieldTags = new uint[] { 8, 26, 16, 37 };
    public static Gpb_Base DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Base DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Base ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Base__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Base, Gpb_Base.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Base__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int IdFieldNumber = 2;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int CellsFieldNumber = 3;
    private pbc::PopsicleList<global::autonomy_msg.Gpb_GridCell> cells_ = new pbc::PopsicleList<global::autonomy_msg.Gpb_GridCell>();
    public scg::IList<global::autonomy_msg.Gpb_GridCell> CellsList {
      get { return cells_; }
    }
    public int CellsCount {
      get { return cells_.Count; }
    }
    public global::autonomy_msg.Gpb_GridCell GetCells(int index) {
      return cells_[index];
    }
    
    public const int SuppliesFieldNumber = 4;
    private bool hasSupplies;
    private float supplies_;
    public bool HasSupplies {
      get { return hasSupplies; }
    }
    public float Supplies {
      get { return supplies_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasId) return false;
        if (!hasSupplies) return false;
        foreach (global::autonomy_msg.Gpb_GridCell element in CellsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbBaseFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[0], BeliefTime);
      }
      if (hasId) {
        output.WriteInt32(2, field_names[2], Id);
      }
      if (cells_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], cells_);
      }
      if (hasSupplies) {
        output.WriteFloat(4, field_names[3], Supplies);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Id);
        }
        foreach (global::autonomy_msg.Gpb_GridCell element in CellsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasSupplies) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, Supplies);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Base ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Base ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Base ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Base ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Base ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Base ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Base ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Base ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Base ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Base ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Base MakeReadOnly() {
      cells_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Base prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Base, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Base cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Base result;
      
      private Gpb_Base PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Base original = result;
          result = new Gpb_Base();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Base MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Base.Descriptor; }
      }
      
      public override Gpb_Base DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Base.DefaultInstance; }
      }
      
      public override Gpb_Base BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Base) {
          return MergeFrom((Gpb_Base) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Base other) {
        if (other == global::autonomy_msg.Gpb_Base.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.cells_.Count != 0) {
          result.cells_.Add(other.cells_);
        }
        if (other.HasSupplies) {
          Supplies = other.Supplies;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbBaseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbBaseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.cells_, global::autonomy_msg.Gpb_GridCell.DefaultInstance, extensionRegistry);
              break;
            }
            case 37: {
              result.hasSupplies = input.ReadFloat(ref result.supplies_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::autonomy_msg.Gpb_GridCell> CellsList {
        get { return PrepareBuilder().cells_; }
      }
      public int CellsCount {
        get { return result.CellsCount; }
      }
      public global::autonomy_msg.Gpb_GridCell GetCells(int index) {
        return result.GetCells(index);
      }
      public Builder SetCells(int index, global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_[index] = value;
        return this;
      }
      public Builder SetCells(int index, global::autonomy_msg.Gpb_GridCell.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cells_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCells(global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_.Add(value);
        return this;
      }
      public Builder AddCells(global::autonomy_msg.Gpb_GridCell.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cells_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCells(scg::IEnumerable<global::autonomy_msg.Gpb_GridCell> values) {
        PrepareBuilder();
        result.cells_.Add(values);
        return this;
      }
      public Builder ClearCells() {
        PrepareBuilder();
        result.cells_.Clear();
        return this;
      }
      
      public bool HasSupplies {
        get { return result.hasSupplies; }
      }
      public float Supplies {
        get { return result.Supplies; }
        set { SetSupplies(value); }
      }
      public Builder SetSupplies(float value) {
        PrepareBuilder();
        result.hasSupplies = true;
        result.supplies_ = value;
        return this;
      }
      public Builder ClearSupplies() {
        PrepareBuilder();
        result.hasSupplies = false;
        result.supplies_ = 0F;
        return this;
      }
    }
    static Gpb_Base() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Terrain : pb::GeneratedMessage<Gpb_Terrain, Gpb_Terrain.Builder> {
    private Gpb_Terrain() { }
    private static readonly Gpb_Terrain defaultInstance = new Gpb_Terrain().MakeReadOnly();
    private static readonly string[] _gpbTerrainFieldNames = new string[] { "belief_time", "cells", "type" };
    private static readonly uint[] _gpbTerrainFieldTags = new uint[] { 8, 26, 16 };
    public static Gpb_Terrain DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Terrain DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Terrain ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Terrain__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Terrain, Gpb_Terrain.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Terrain__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int CellsFieldNumber = 3;
    private pbc::PopsicleList<global::autonomy_msg.Gpb_GridCell> cells_ = new pbc::PopsicleList<global::autonomy_msg.Gpb_GridCell>();
    public scg::IList<global::autonomy_msg.Gpb_GridCell> CellsList {
      get { return cells_; }
    }
    public int CellsCount {
      get { return cells_.Count; }
    }
    public global::autonomy_msg.Gpb_GridCell GetCells(int index) {
      return cells_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasType) return false;
        foreach (global::autonomy_msg.Gpb_GridCell element in CellsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbTerrainFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[0], BeliefTime);
      }
      if (hasType) {
        output.WriteInt32(2, field_names[2], Type);
      }
      if (cells_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], cells_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Type);
        }
        foreach (global::autonomy_msg.Gpb_GridCell element in CellsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Terrain ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Terrain ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Terrain ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Terrain ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Terrain ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Terrain ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Terrain ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Terrain ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Terrain ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Terrain ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Terrain MakeReadOnly() {
      cells_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Terrain prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Terrain, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Terrain cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Terrain result;
      
      private Gpb_Terrain PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Terrain original = result;
          result = new Gpb_Terrain();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Terrain MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Terrain.Descriptor; }
      }
      
      public override Gpb_Terrain DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Terrain.DefaultInstance; }
      }
      
      public override Gpb_Terrain BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Terrain) {
          return MergeFrom((Gpb_Terrain) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Terrain other) {
        if (other == global::autonomy_msg.Gpb_Terrain.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.cells_.Count != 0) {
          result.cells_.Add(other.cells_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbTerrainFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbTerrainFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.cells_, global::autonomy_msg.Gpb_GridCell.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::autonomy_msg.Gpb_GridCell> CellsList {
        get { return PrepareBuilder().cells_; }
      }
      public int CellsCount {
        get { return result.CellsCount; }
      }
      public global::autonomy_msg.Gpb_GridCell GetCells(int index) {
        return result.GetCells(index);
      }
      public Builder SetCells(int index, global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_[index] = value;
        return this;
      }
      public Builder SetCells(int index, global::autonomy_msg.Gpb_GridCell.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cells_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCells(global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_.Add(value);
        return this;
      }
      public Builder AddCells(global::autonomy_msg.Gpb_GridCell.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.cells_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCells(scg::IEnumerable<global::autonomy_msg.Gpb_GridCell> values) {
        PrepareBuilder();
        result.cells_.Add(values);
        return this;
      }
      public Builder ClearCells() {
        PrepareBuilder();
        result.cells_.Clear();
        return this;
      }
    }
    static Gpb_Terrain() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Mode_Command : pb::GeneratedMessage<Gpb_Mode_Command, Gpb_Mode_Command.Builder> {
    private Gpb_Mode_Command() { }
    private static readonly Gpb_Mode_Command defaultInstance = new Gpb_Mode_Command().MakeReadOnly();
    private static readonly string[] _gpbModeCommandFieldNames = new string[] { "actor_id", "belief_time", "mode_id", "request_time" };
    private static readonly uint[] _gpbModeCommandFieldTags = new uint[] { 24, 8, 32, 16 };
    public static Gpb_Mode_Command DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Mode_Command DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Mode_Command ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Mode_Command__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Mode_Command, Gpb_Mode_Command.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Mode_Command__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int RequestTimeFieldNumber = 2;
    private bool hasRequestTime;
    private ulong requestTime_;
    public bool HasRequestTime {
      get { return hasRequestTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RequestTime {
      get { return requestTime_; }
    }
    
    public const int ActorIdFieldNumber = 3;
    private bool hasActorId;
    private int actorId_;
    public bool HasActorId {
      get { return hasActorId; }
    }
    public int ActorId {
      get { return actorId_; }
    }
    
    public const int ModeIdFieldNumber = 4;
    private bool hasModeId;
    private int modeId_;
    public bool HasModeId {
      get { return hasModeId; }
    }
    public int ModeId {
      get { return modeId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasRequestTime) return false;
        if (!hasActorId) return false;
        if (!hasModeId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbModeCommandFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[1], BeliefTime);
      }
      if (hasRequestTime) {
        output.WriteUInt64(2, field_names[3], RequestTime);
      }
      if (hasActorId) {
        output.WriteInt32(3, field_names[0], ActorId);
      }
      if (hasModeId) {
        output.WriteInt32(4, field_names[2], ModeId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasRequestTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, RequestTime);
        }
        if (hasActorId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ActorId);
        }
        if (hasModeId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, ModeId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Mode_Command ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Mode_Command ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Mode_Command MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Mode_Command prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Mode_Command, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Mode_Command cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Mode_Command result;
      
      private Gpb_Mode_Command PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Mode_Command original = result;
          result = new Gpb_Mode_Command();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Mode_Command MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Mode_Command.Descriptor; }
      }
      
      public override Gpb_Mode_Command DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Mode_Command.DefaultInstance; }
      }
      
      public override Gpb_Mode_Command BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Mode_Command) {
          return MergeFrom((Gpb_Mode_Command) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Mode_Command other) {
        if (other == global::autonomy_msg.Gpb_Mode_Command.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasRequestTime) {
          RequestTime = other.RequestTime;
        }
        if (other.HasActorId) {
          ActorId = other.ActorId;
        }
        if (other.HasModeId) {
          ModeId = other.ModeId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbModeCommandFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbModeCommandFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasRequestTime = input.ReadUInt64(ref result.requestTime_);
              break;
            }
            case 24: {
              result.hasActorId = input.ReadInt32(ref result.actorId_);
              break;
            }
            case 32: {
              result.hasModeId = input.ReadInt32(ref result.modeId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasRequestTime {
        get { return result.hasRequestTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RequestTime {
        get { return result.RequestTime; }
        set { SetRequestTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestTime(ulong value) {
        PrepareBuilder();
        result.hasRequestTime = true;
        result.requestTime_ = value;
        return this;
      }
      public Builder ClearRequestTime() {
        PrepareBuilder();
        result.hasRequestTime = false;
        result.requestTime_ = 0UL;
        return this;
      }
      
      public bool HasActorId {
        get { return result.hasActorId; }
      }
      public int ActorId {
        get { return result.ActorId; }
        set { SetActorId(value); }
      }
      public Builder SetActorId(int value) {
        PrepareBuilder();
        result.hasActorId = true;
        result.actorId_ = value;
        return this;
      }
      public Builder ClearActorId() {
        PrepareBuilder();
        result.hasActorId = false;
        result.actorId_ = 0;
        return this;
      }
      
      public bool HasModeId {
        get { return result.hasModeId; }
      }
      public int ModeId {
        get { return result.ModeId; }
        set { SetModeId(value); }
      }
      public Builder SetModeId(int value) {
        PrepareBuilder();
        result.hasModeId = true;
        result.modeId_ = value;
        return this;
      }
      public Builder ClearModeId() {
        PrepareBuilder();
        result.hasModeId = false;
        result.modeId_ = 0;
        return this;
      }
    }
    static Gpb_Mode_Command() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Waypoint : pb::GeneratedMessage<Gpb_Waypoint, Gpb_Waypoint.Builder> {
    private Gpb_Waypoint() { }
    private static readonly Gpb_Waypoint defaultInstance = new Gpb_Waypoint().MakeReadOnly();
    private static readonly string[] _gpbWaypointFieldNames = new string[] { "actor_id", "belief_time", "pos_x", "pos_y", "pos_z", "request_time" };
    private static readonly uint[] _gpbWaypointFieldTags = new uint[] { 24, 8, 37, 45, 53, 16 };
    public static Gpb_Waypoint DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Waypoint DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Waypoint ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Waypoint__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Waypoint, Gpb_Waypoint.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Waypoint__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int RequestTimeFieldNumber = 2;
    private bool hasRequestTime;
    private ulong requestTime_;
    public bool HasRequestTime {
      get { return hasRequestTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RequestTime {
      get { return requestTime_; }
    }
    
    public const int ActorIdFieldNumber = 3;
    private bool hasActorId;
    private int actorId_;
    public bool HasActorId {
      get { return hasActorId; }
    }
    public int ActorId {
      get { return actorId_; }
    }
    
    public const int PosXFieldNumber = 4;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 5;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public const int PosZFieldNumber = 6;
    private bool hasPosZ;
    private float posZ_;
    public bool HasPosZ {
      get { return hasPosZ; }
    }
    public float PosZ {
      get { return posZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasRequestTime) return false;
        if (!hasActorId) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        if (!hasPosZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbWaypointFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[1], BeliefTime);
      }
      if (hasRequestTime) {
        output.WriteUInt64(2, field_names[5], RequestTime);
      }
      if (hasActorId) {
        output.WriteInt32(3, field_names[0], ActorId);
      }
      if (hasPosX) {
        output.WriteFloat(4, field_names[2], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(5, field_names[3], PosY);
      }
      if (hasPosZ) {
        output.WriteFloat(6, field_names[4], PosZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasRequestTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, RequestTime);
        }
        if (hasActorId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ActorId);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, PosY);
        }
        if (hasPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, PosZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Waypoint ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Waypoint ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Waypoint MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Waypoint prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Waypoint, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Waypoint cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Waypoint result;
      
      private Gpb_Waypoint PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Waypoint original = result;
          result = new Gpb_Waypoint();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Waypoint MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Waypoint.Descriptor; }
      }
      
      public override Gpb_Waypoint DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Waypoint.DefaultInstance; }
      }
      
      public override Gpb_Waypoint BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Waypoint) {
          return MergeFrom((Gpb_Waypoint) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Waypoint other) {
        if (other == global::autonomy_msg.Gpb_Waypoint.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasRequestTime) {
          RequestTime = other.RequestTime;
        }
        if (other.HasActorId) {
          ActorId = other.ActorId;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        if (other.HasPosZ) {
          PosZ = other.PosZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbWaypointFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbWaypointFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasRequestTime = input.ReadUInt64(ref result.requestTime_);
              break;
            }
            case 24: {
              result.hasActorId = input.ReadInt32(ref result.actorId_);
              break;
            }
            case 37: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 45: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
            case 53: {
              result.hasPosZ = input.ReadFloat(ref result.posZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasRequestTime {
        get { return result.hasRequestTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RequestTime {
        get { return result.RequestTime; }
        set { SetRequestTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestTime(ulong value) {
        PrepareBuilder();
        result.hasRequestTime = true;
        result.requestTime_ = value;
        return this;
      }
      public Builder ClearRequestTime() {
        PrepareBuilder();
        result.hasRequestTime = false;
        result.requestTime_ = 0UL;
        return this;
      }
      
      public bool HasActorId {
        get { return result.hasActorId; }
      }
      public int ActorId {
        get { return result.ActorId; }
        set { SetActorId(value); }
      }
      public Builder SetActorId(int value) {
        PrepareBuilder();
        result.hasActorId = true;
        result.actorId_ = value;
        return this;
      }
      public Builder ClearActorId() {
        PrepareBuilder();
        result.hasActorId = false;
        result.actorId_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
      
      public bool HasPosZ {
        get { return result.hasPosZ; }
      }
      public float PosZ {
        get { return result.PosZ; }
        set { SetPosZ(value); }
      }
      public Builder SetPosZ(float value) {
        PrepareBuilder();
        result.hasPosZ = true;
        result.posZ_ = value;
        return this;
      }
      public Builder ClearPosZ() {
        PrepareBuilder();
        result.hasPosZ = false;
        result.posZ_ = 0F;
        return this;
      }
    }
    static Gpb_Waypoint() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Time : pb::GeneratedMessage<Gpb_Time, Gpb_Time.Builder> {
    private Gpb_Time() { }
    private static readonly Gpb_Time defaultInstance = new Gpb_Time().MakeReadOnly();
    private static readonly string[] _gpbTimeFieldNames = new string[] { "belief_time", "time" };
    private static readonly uint[] _gpbTimeFieldTags = new uint[] { 8, 16 };
    public static Gpb_Time DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Time DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Time ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Time__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Time, Gpb_Time.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Time__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int TimeFieldNumber = 2;
    private bool hasTime;
    private ulong time_;
    public bool HasTime {
      get { return hasTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Time {
      get { return time_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbTimeFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[0], BeliefTime);
      }
      if (hasTime) {
        output.WriteUInt64(2, field_names[1], Time);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Time);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Time ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Time ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Time ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Time ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Time MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Time prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Time, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Time cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Time result;
      
      private Gpb_Time PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Time original = result;
          result = new Gpb_Time();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Time MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Time.Descriptor; }
      }
      
      public override Gpb_Time DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Time.DefaultInstance; }
      }
      
      public override Gpb_Time BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Time) {
          return MergeFrom((Gpb_Time) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Time other) {
        if (other == global::autonomy_msg.Gpb_Time.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasTime) {
          Time = other.Time;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbTimeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbTimeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasTime = input.ReadUInt64(ref result.time_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTime(ulong value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0UL;
        return this;
      }
    }
    static Gpb_Time() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_RoadCell : pb::GeneratedMessage<Gpb_RoadCell, Gpb_RoadCell.Builder> {
    private Gpb_RoadCell() { }
    private static readonly Gpb_RoadCell defaultInstance = new Gpb_RoadCell().MakeReadOnly();
    private static readonly string[] _gpbRoadCellFieldNames = new string[] { "belief_time", "cell", "isRoadEnd" };
    private static readonly uint[] _gpbRoadCellFieldTags = new uint[] { 8, 26, 16 };
    public static Gpb_RoadCell DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_RoadCell DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_RoadCell ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_RoadCell__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_RoadCell, Gpb_RoadCell.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_RoadCell__FieldAccessorTable; }
    }
    
    public const int BeliefTimeFieldNumber = 1;
    private bool hasBeliefTime;
    private ulong beliefTime_;
    public bool HasBeliefTime {
      get { return hasBeliefTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BeliefTime {
      get { return beliefTime_; }
    }
    
    public const int IsRoadEndFieldNumber = 2;
    private bool hasIsRoadEnd;
    private bool isRoadEnd_;
    public bool HasIsRoadEnd {
      get { return hasIsRoadEnd; }
    }
    public bool IsRoadEnd {
      get { return isRoadEnd_; }
    }
    
    public const int CellFieldNumber = 3;
    private bool hasCell;
    private global::autonomy_msg.Gpb_GridCell cell_;
    public bool HasCell {
      get { return hasCell; }
    }
    public global::autonomy_msg.Gpb_GridCell Cell {
      get { return cell_ ?? global::autonomy_msg.Gpb_GridCell.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBeliefTime) return false;
        if (!hasIsRoadEnd) return false;
        if (!hasCell) return false;
        if (!Cell.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbRoadCellFieldNames;
      if (hasBeliefTime) {
        output.WriteUInt64(1, field_names[0], BeliefTime);
      }
      if (hasIsRoadEnd) {
        output.WriteBool(2, field_names[2], IsRoadEnd);
      }
      if (hasCell) {
        output.WriteMessage(3, field_names[1], Cell);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBeliefTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, BeliefTime);
        }
        if (hasIsRoadEnd) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsRoadEnd);
        }
        if (hasCell) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Cell);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_RoadCell ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_RoadCell ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_RoadCell ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_RoadCell ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_RoadCell ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_RoadCell ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_RoadCell ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_RoadCell ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_RoadCell ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_RoadCell ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_RoadCell MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_RoadCell prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_RoadCell, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_RoadCell cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_RoadCell result;
      
      private Gpb_RoadCell PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_RoadCell original = result;
          result = new Gpb_RoadCell();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_RoadCell MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_RoadCell.Descriptor; }
      }
      
      public override Gpb_RoadCell DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_RoadCell.DefaultInstance; }
      }
      
      public override Gpb_RoadCell BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_RoadCell) {
          return MergeFrom((Gpb_RoadCell) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_RoadCell other) {
        if (other == global::autonomy_msg.Gpb_RoadCell.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBeliefTime) {
          BeliefTime = other.BeliefTime;
        }
        if (other.HasIsRoadEnd) {
          IsRoadEnd = other.IsRoadEnd;
        }
        if (other.HasCell) {
          MergeCell(other.Cell);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbRoadCellFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbRoadCellFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBeliefTime = input.ReadUInt64(ref result.beliefTime_);
              break;
            }
            case 16: {
              result.hasIsRoadEnd = input.ReadBool(ref result.isRoadEnd_);
              break;
            }
            case 26: {
              global::autonomy_msg.Gpb_GridCell.Builder subBuilder = global::autonomy_msg.Gpb_GridCell.CreateBuilder();
              if (result.hasCell) {
                subBuilder.MergeFrom(Cell);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Cell = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBeliefTime {
        get { return result.hasBeliefTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong BeliefTime {
        get { return result.BeliefTime; }
        set { SetBeliefTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBeliefTime(ulong value) {
        PrepareBuilder();
        result.hasBeliefTime = true;
        result.beliefTime_ = value;
        return this;
      }
      public Builder ClearBeliefTime() {
        PrepareBuilder();
        result.hasBeliefTime = false;
        result.beliefTime_ = 0UL;
        return this;
      }
      
      public bool HasIsRoadEnd {
        get { return result.hasIsRoadEnd; }
      }
      public bool IsRoadEnd {
        get { return result.IsRoadEnd; }
        set { SetIsRoadEnd(value); }
      }
      public Builder SetIsRoadEnd(bool value) {
        PrepareBuilder();
        result.hasIsRoadEnd = true;
        result.isRoadEnd_ = value;
        return this;
      }
      public Builder ClearIsRoadEnd() {
        PrepareBuilder();
        result.hasIsRoadEnd = false;
        result.isRoadEnd_ = false;
        return this;
      }
      
      public bool HasCell {
       get { return result.hasCell; }
      }
      public global::autonomy_msg.Gpb_GridCell Cell {
        get { return result.Cell; }
        set { SetCell(value); }
      }
      public Builder SetCell(global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCell = true;
        result.cell_ = value;
        return this;
      }
      public Builder SetCell(global::autonomy_msg.Gpb_GridCell.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCell = true;
        result.cell_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCell(global::autonomy_msg.Gpb_GridCell value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCell &&
            result.cell_ != global::autonomy_msg.Gpb_GridCell.DefaultInstance) {
            result.cell_ = global::autonomy_msg.Gpb_GridCell.CreateBuilder(result.cell_).MergeFrom(value).BuildPartial();
        } else {
          result.cell_ = value;
        }
        result.hasCell = true;
        return this;
      }
      public Builder ClearCell() {
        PrepareBuilder();
        result.hasCell = false;
        result.cell_ = null;
        return this;
      }
    }
    static Gpb_RoadCell() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
