// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace autonomy_msg {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Autonomy {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Waypoint_Override__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Waypoint_Override, global::autonomy_msg.Gpb_Waypoint_Override.Builder> internal__static_autonomy_msg_Gpb_Waypoint_Override__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Actor__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Actor, global::autonomy_msg.Gpb_Actor.Builder> internal__static_autonomy_msg_Gpb_Actor__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Mode_Command__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Mode_Command, global::autonomy_msg.Gpb_Mode_Command.Builder> internal__static_autonomy_msg_Gpb_Mode_Command__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_SPOI__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_SPOI, global::autonomy_msg.Gpb_SPOI.Builder> internal__static_autonomy_msg_Gpb_SPOI__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Nogo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Nogo, global::autonomy_msg.Gpb_Nogo.Builder> internal__static_autonomy_msg_Gpb_Nogo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_NGOSiteCell__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_NGOSiteCell, global::autonomy_msg.Gpb_NGOSiteCell.Builder> internal__static_autonomy_msg_Gpb_NGOSiteCell__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Time__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Time, global::autonomy_msg.Gpb_Time.Builder> internal__static_autonomy_msg_Gpb_Time__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Waypoint__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Waypoint, global::autonomy_msg.Gpb_Waypoint.Builder> internal__static_autonomy_msg_Gpb_Waypoint__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_VillageCell__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_VillageCell, global::autonomy_msg.Gpb_VillageCell.Builder> internal__static_autonomy_msg_Gpb_VillageCell__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_Road__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Road, global::autonomy_msg.Gpb_Road.Builder> internal__static_autonomy_msg_Gpb_Road__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_autonomy_msg_Gpb_BaseCell__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_BaseCell, global::autonomy_msg.Gpb_BaseCell.Builder> internal__static_autonomy_msg_Gpb_BaseCell__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Autonomy() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg5hdXRvbm9teS5wcm90bxIMYXV0b25vbXlfbXNnImwKFUdwYl9XYXlwb2lu" + 
          "dF9PdmVycmlkZRIUCgxyZXF1ZXN0X3RpbWUYASACKAQSEAoIYWN0b3JfaWQY" + 
          "AiACKAUSDQoFcG9zX3gYAyACKAISDQoFcG9zX3kYBCACKAISDQoFcG9zX3oY" + 
          "BSACKAIiqgEKCUdwYl9BY3RvchIRCgl1bmlxdWVfaWQYASACKAUSEwoLYWZm" + 
          "aWxpYXRpb24YAiACKAUSDAoEdHlwZRgDIAIoBRINCgVwb3NfeBgEIAIoAhIN" + 
          "CgVwb3NfeRgFIAIoAhINCgVwb3NfehgGIAIoAhISCgp2ZWxvY2l0eV94GAcg" + 
          "ASgCEhIKCnZlbG9jaXR5X3kYCCABKAISEgoKdmVsb2NpdHlfehgJIAEoAiJL" + 
          "ChBHcGJfTW9kZV9Db21tYW5kEhQKDHJlcXVlc3RfdGltZRgBIAIoBBIQCghh" + 
          "Y3Rvcl9pZBgCIAIoBRIPCgdtb2RlX2lkGAMgAigFIlAKCEdwYl9TUE9JEhQK" + 
          "DHJlcXVlc3RfdGltZRgBIAIoBBIQCghhY3Rvcl9pZBgCIAIoBRINCgVwb3Nf" + 
          "eBgDIAIoAhINCgVwb3NfeRgEIAIoAiIoCghHcGJfTm9nbxINCgVwb3NfeBgB" + 
          "IAIoAhINCgVwb3NfeRgCIAIoAiI7Cg9HcGJfTkdPU2l0ZUNlbGwSCgoCaWQY" + 
          "ASACKAUSDQoFcG9zX3gYAiACKAISDQoFcG9zX3kYAyACKAIiGAoIR3BiX1Rp" + 
          "bWUSDAoEdGltZRgBIAIoBCJjCgxHcGJfV2F5cG9pbnQSFAoMcmVxdWVzdF90" + 
          "aW1lGAEgAigEEhAKCGFjdG9yX2lkGAIgAigFEg0KBXBvc194GAMgAigCEg0K" + 
          "BXBvc195GAQgAigCEg0KBXBvc196GAUgAigCIjsKD0dwYl9WaWxsYWdlQ2Vs" + 
          "bBIKCgJpZBgBIAIoBRINCgVwb3NfeBgCIAIoAhINCgVwb3NfeRgDIAIoAiI7" + 
          "CghHcGJfUm9hZBIRCglpc1JvYWRFbmQYASACKAgSDQoFcG9zX3gYAiACKAIS" + 
          "DQoFcG9zX3kYAyACKAIiOAoMR3BiX0Jhc2VDZWxsEgoKAmlkGAEgAigFEg0K" + 
          "BXBvc194GAIgAigCEg0KBXBvc195GAMgAigC");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_autonomy_msg_Gpb_Waypoint_Override__Descriptor = Descriptor.MessageTypes[0];
        internal__static_autonomy_msg_Gpb_Waypoint_Override__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Waypoint_Override, global::autonomy_msg.Gpb_Waypoint_Override.Builder>(internal__static_autonomy_msg_Gpb_Waypoint_Override__Descriptor,
                new string[] { "RequestTime", "ActorId", "PosX", "PosY", "PosZ", });
        internal__static_autonomy_msg_Gpb_Actor__Descriptor = Descriptor.MessageTypes[1];
        internal__static_autonomy_msg_Gpb_Actor__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Actor, global::autonomy_msg.Gpb_Actor.Builder>(internal__static_autonomy_msg_Gpb_Actor__Descriptor,
                new string[] { "UniqueId", "Affiliation", "Type", "PosX", "PosY", "PosZ", "VelocityX", "VelocityY", "VelocityZ", });
        internal__static_autonomy_msg_Gpb_Mode_Command__Descriptor = Descriptor.MessageTypes[2];
        internal__static_autonomy_msg_Gpb_Mode_Command__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Mode_Command, global::autonomy_msg.Gpb_Mode_Command.Builder>(internal__static_autonomy_msg_Gpb_Mode_Command__Descriptor,
                new string[] { "RequestTime", "ActorId", "ModeId", });
        internal__static_autonomy_msg_Gpb_SPOI__Descriptor = Descriptor.MessageTypes[3];
        internal__static_autonomy_msg_Gpb_SPOI__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_SPOI, global::autonomy_msg.Gpb_SPOI.Builder>(internal__static_autonomy_msg_Gpb_SPOI__Descriptor,
                new string[] { "RequestTime", "ActorId", "PosX", "PosY", });
        internal__static_autonomy_msg_Gpb_Nogo__Descriptor = Descriptor.MessageTypes[4];
        internal__static_autonomy_msg_Gpb_Nogo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Nogo, global::autonomy_msg.Gpb_Nogo.Builder>(internal__static_autonomy_msg_Gpb_Nogo__Descriptor,
                new string[] { "PosX", "PosY", });
        internal__static_autonomy_msg_Gpb_NGOSiteCell__Descriptor = Descriptor.MessageTypes[5];
        internal__static_autonomy_msg_Gpb_NGOSiteCell__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_NGOSiteCell, global::autonomy_msg.Gpb_NGOSiteCell.Builder>(internal__static_autonomy_msg_Gpb_NGOSiteCell__Descriptor,
                new string[] { "Id", "PosX", "PosY", });
        internal__static_autonomy_msg_Gpb_Time__Descriptor = Descriptor.MessageTypes[6];
        internal__static_autonomy_msg_Gpb_Time__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Time, global::autonomy_msg.Gpb_Time.Builder>(internal__static_autonomy_msg_Gpb_Time__Descriptor,
                new string[] { "Time", });
        internal__static_autonomy_msg_Gpb_Waypoint__Descriptor = Descriptor.MessageTypes[7];
        internal__static_autonomy_msg_Gpb_Waypoint__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Waypoint, global::autonomy_msg.Gpb_Waypoint.Builder>(internal__static_autonomy_msg_Gpb_Waypoint__Descriptor,
                new string[] { "RequestTime", "ActorId", "PosX", "PosY", "PosZ", });
        internal__static_autonomy_msg_Gpb_VillageCell__Descriptor = Descriptor.MessageTypes[8];
        internal__static_autonomy_msg_Gpb_VillageCell__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_VillageCell, global::autonomy_msg.Gpb_VillageCell.Builder>(internal__static_autonomy_msg_Gpb_VillageCell__Descriptor,
                new string[] { "Id", "PosX", "PosY", });
        internal__static_autonomy_msg_Gpb_Road__Descriptor = Descriptor.MessageTypes[9];
        internal__static_autonomy_msg_Gpb_Road__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_Road, global::autonomy_msg.Gpb_Road.Builder>(internal__static_autonomy_msg_Gpb_Road__Descriptor,
                new string[] { "IsRoadEnd", "PosX", "PosY", });
        internal__static_autonomy_msg_Gpb_BaseCell__Descriptor = Descriptor.MessageTypes[10];
        internal__static_autonomy_msg_Gpb_BaseCell__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::autonomy_msg.Gpb_BaseCell, global::autonomy_msg.Gpb_BaseCell.Builder>(internal__static_autonomy_msg_Gpb_BaseCell__Descriptor,
                new string[] { "Id", "PosX", "PosY", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Waypoint_Override : pb::GeneratedMessage<Gpb_Waypoint_Override, Gpb_Waypoint_Override.Builder> {
    private Gpb_Waypoint_Override() { }
    private static readonly Gpb_Waypoint_Override defaultInstance = new Gpb_Waypoint_Override().MakeReadOnly();
    private static readonly string[] _gpbWaypointOverrideFieldNames = new string[] { "actor_id", "pos_x", "pos_y", "pos_z", "request_time" };
    private static readonly uint[] _gpbWaypointOverrideFieldTags = new uint[] { 16, 29, 37, 45, 8 };
    public static Gpb_Waypoint_Override DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Waypoint_Override DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Waypoint_Override ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Waypoint_Override__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Waypoint_Override, Gpb_Waypoint_Override.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Waypoint_Override__FieldAccessorTable; }
    }
    
    public const int RequestTimeFieldNumber = 1;
    private bool hasRequestTime;
    private ulong requestTime_;
    public bool HasRequestTime {
      get { return hasRequestTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RequestTime {
      get { return requestTime_; }
    }
    
    public const int ActorIdFieldNumber = 2;
    private bool hasActorId;
    private int actorId_;
    public bool HasActorId {
      get { return hasActorId; }
    }
    public int ActorId {
      get { return actorId_; }
    }
    
    public const int PosXFieldNumber = 3;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 4;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public const int PosZFieldNumber = 5;
    private bool hasPosZ;
    private float posZ_;
    public bool HasPosZ {
      get { return hasPosZ; }
    }
    public float PosZ {
      get { return posZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestTime) return false;
        if (!hasActorId) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        if (!hasPosZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbWaypointOverrideFieldNames;
      if (hasRequestTime) {
        output.WriteUInt64(1, field_names[4], RequestTime);
      }
      if (hasActorId) {
        output.WriteInt32(2, field_names[0], ActorId);
      }
      if (hasPosX) {
        output.WriteFloat(3, field_names[1], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(4, field_names[2], PosY);
      }
      if (hasPosZ) {
        output.WriteFloat(5, field_names[3], PosZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, RequestTime);
        }
        if (hasActorId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ActorId);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, PosY);
        }
        if (hasPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, PosZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Waypoint_Override ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Waypoint_Override ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Waypoint_Override MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Waypoint_Override prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Waypoint_Override, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Waypoint_Override cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Waypoint_Override result;
      
      private Gpb_Waypoint_Override PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Waypoint_Override original = result;
          result = new Gpb_Waypoint_Override();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Waypoint_Override MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Waypoint_Override.Descriptor; }
      }
      
      public override Gpb_Waypoint_Override DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Waypoint_Override.DefaultInstance; }
      }
      
      public override Gpb_Waypoint_Override BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Waypoint_Override) {
          return MergeFrom((Gpb_Waypoint_Override) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Waypoint_Override other) {
        if (other == global::autonomy_msg.Gpb_Waypoint_Override.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestTime) {
          RequestTime = other.RequestTime;
        }
        if (other.HasActorId) {
          ActorId = other.ActorId;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        if (other.HasPosZ) {
          PosZ = other.PosZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbWaypointOverrideFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbWaypointOverrideFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestTime = input.ReadUInt64(ref result.requestTime_);
              break;
            }
            case 16: {
              result.hasActorId = input.ReadInt32(ref result.actorId_);
              break;
            }
            case 29: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 37: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
            case 45: {
              result.hasPosZ = input.ReadFloat(ref result.posZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestTime {
        get { return result.hasRequestTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RequestTime {
        get { return result.RequestTime; }
        set { SetRequestTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestTime(ulong value) {
        PrepareBuilder();
        result.hasRequestTime = true;
        result.requestTime_ = value;
        return this;
      }
      public Builder ClearRequestTime() {
        PrepareBuilder();
        result.hasRequestTime = false;
        result.requestTime_ = 0UL;
        return this;
      }
      
      public bool HasActorId {
        get { return result.hasActorId; }
      }
      public int ActorId {
        get { return result.ActorId; }
        set { SetActorId(value); }
      }
      public Builder SetActorId(int value) {
        PrepareBuilder();
        result.hasActorId = true;
        result.actorId_ = value;
        return this;
      }
      public Builder ClearActorId() {
        PrepareBuilder();
        result.hasActorId = false;
        result.actorId_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
      
      public bool HasPosZ {
        get { return result.hasPosZ; }
      }
      public float PosZ {
        get { return result.PosZ; }
        set { SetPosZ(value); }
      }
      public Builder SetPosZ(float value) {
        PrepareBuilder();
        result.hasPosZ = true;
        result.posZ_ = value;
        return this;
      }
      public Builder ClearPosZ() {
        PrepareBuilder();
        result.hasPosZ = false;
        result.posZ_ = 0F;
        return this;
      }
    }
    static Gpb_Waypoint_Override() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Actor : pb::GeneratedMessage<Gpb_Actor, Gpb_Actor.Builder> {
    private Gpb_Actor() { }
    private static readonly Gpb_Actor defaultInstance = new Gpb_Actor().MakeReadOnly();
    private static readonly string[] _gpbActorFieldNames = new string[] { "affiliation", "pos_x", "pos_y", "pos_z", "type", "unique_id", "velocity_x", "velocity_y", "velocity_z" };
    private static readonly uint[] _gpbActorFieldTags = new uint[] { 16, 37, 45, 53, 24, 8, 61, 69, 77 };
    public static Gpb_Actor DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Actor DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Actor ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Actor__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Actor, Gpb_Actor.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Actor__FieldAccessorTable; }
    }
    
    public const int UniqueIdFieldNumber = 1;
    private bool hasUniqueId;
    private int uniqueId_;
    public bool HasUniqueId {
      get { return hasUniqueId; }
    }
    public int UniqueId {
      get { return uniqueId_; }
    }
    
    public const int AffiliationFieldNumber = 2;
    private bool hasAffiliation;
    private int affiliation_;
    public bool HasAffiliation {
      get { return hasAffiliation; }
    }
    public int Affiliation {
      get { return affiliation_; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int PosXFieldNumber = 4;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 5;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public const int PosZFieldNumber = 6;
    private bool hasPosZ;
    private float posZ_;
    public bool HasPosZ {
      get { return hasPosZ; }
    }
    public float PosZ {
      get { return posZ_; }
    }
    
    public const int VelocityXFieldNumber = 7;
    private bool hasVelocityX;
    private float velocityX_;
    public bool HasVelocityX {
      get { return hasVelocityX; }
    }
    public float VelocityX {
      get { return velocityX_; }
    }
    
    public const int VelocityYFieldNumber = 8;
    private bool hasVelocityY;
    private float velocityY_;
    public bool HasVelocityY {
      get { return hasVelocityY; }
    }
    public float VelocityY {
      get { return velocityY_; }
    }
    
    public const int VelocityZFieldNumber = 9;
    private bool hasVelocityZ;
    private float velocityZ_;
    public bool HasVelocityZ {
      get { return hasVelocityZ; }
    }
    public float VelocityZ {
      get { return velocityZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUniqueId) return false;
        if (!hasAffiliation) return false;
        if (!hasType) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        if (!hasPosZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbActorFieldNames;
      if (hasUniqueId) {
        output.WriteInt32(1, field_names[5], UniqueId);
      }
      if (hasAffiliation) {
        output.WriteInt32(2, field_names[0], Affiliation);
      }
      if (hasType) {
        output.WriteInt32(3, field_names[4], Type);
      }
      if (hasPosX) {
        output.WriteFloat(4, field_names[1], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(5, field_names[2], PosY);
      }
      if (hasPosZ) {
        output.WriteFloat(6, field_names[3], PosZ);
      }
      if (hasVelocityX) {
        output.WriteFloat(7, field_names[6], VelocityX);
      }
      if (hasVelocityY) {
        output.WriteFloat(8, field_names[7], VelocityY);
      }
      if (hasVelocityZ) {
        output.WriteFloat(9, field_names[8], VelocityZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUniqueId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, UniqueId);
        }
        if (hasAffiliation) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Affiliation);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Type);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, PosY);
        }
        if (hasPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, PosZ);
        }
        if (hasVelocityX) {
          size += pb::CodedOutputStream.ComputeFloatSize(7, VelocityX);
        }
        if (hasVelocityY) {
          size += pb::CodedOutputStream.ComputeFloatSize(8, VelocityY);
        }
        if (hasVelocityZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(9, VelocityZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Actor ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Actor ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Actor ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Actor ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Actor MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Actor prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Actor, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Actor cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Actor result;
      
      private Gpb_Actor PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Actor original = result;
          result = new Gpb_Actor();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Actor MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Actor.Descriptor; }
      }
      
      public override Gpb_Actor DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Actor.DefaultInstance; }
      }
      
      public override Gpb_Actor BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Actor) {
          return MergeFrom((Gpb_Actor) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Actor other) {
        if (other == global::autonomy_msg.Gpb_Actor.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUniqueId) {
          UniqueId = other.UniqueId;
        }
        if (other.HasAffiliation) {
          Affiliation = other.Affiliation;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        if (other.HasPosZ) {
          PosZ = other.PosZ;
        }
        if (other.HasVelocityX) {
          VelocityX = other.VelocityX;
        }
        if (other.HasVelocityY) {
          VelocityY = other.VelocityY;
        }
        if (other.HasVelocityZ) {
          VelocityZ = other.VelocityZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbActorFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbActorFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUniqueId = input.ReadInt32(ref result.uniqueId_);
              break;
            }
            case 16: {
              result.hasAffiliation = input.ReadInt32(ref result.affiliation_);
              break;
            }
            case 24: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 37: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 45: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
            case 53: {
              result.hasPosZ = input.ReadFloat(ref result.posZ_);
              break;
            }
            case 61: {
              result.hasVelocityX = input.ReadFloat(ref result.velocityX_);
              break;
            }
            case 69: {
              result.hasVelocityY = input.ReadFloat(ref result.velocityY_);
              break;
            }
            case 77: {
              result.hasVelocityZ = input.ReadFloat(ref result.velocityZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUniqueId {
        get { return result.hasUniqueId; }
      }
      public int UniqueId {
        get { return result.UniqueId; }
        set { SetUniqueId(value); }
      }
      public Builder SetUniqueId(int value) {
        PrepareBuilder();
        result.hasUniqueId = true;
        result.uniqueId_ = value;
        return this;
      }
      public Builder ClearUniqueId() {
        PrepareBuilder();
        result.hasUniqueId = false;
        result.uniqueId_ = 0;
        return this;
      }
      
      public bool HasAffiliation {
        get { return result.hasAffiliation; }
      }
      public int Affiliation {
        get { return result.Affiliation; }
        set { SetAffiliation(value); }
      }
      public Builder SetAffiliation(int value) {
        PrepareBuilder();
        result.hasAffiliation = true;
        result.affiliation_ = value;
        return this;
      }
      public Builder ClearAffiliation() {
        PrepareBuilder();
        result.hasAffiliation = false;
        result.affiliation_ = 0;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
      
      public bool HasPosZ {
        get { return result.hasPosZ; }
      }
      public float PosZ {
        get { return result.PosZ; }
        set { SetPosZ(value); }
      }
      public Builder SetPosZ(float value) {
        PrepareBuilder();
        result.hasPosZ = true;
        result.posZ_ = value;
        return this;
      }
      public Builder ClearPosZ() {
        PrepareBuilder();
        result.hasPosZ = false;
        result.posZ_ = 0F;
        return this;
      }
      
      public bool HasVelocityX {
        get { return result.hasVelocityX; }
      }
      public float VelocityX {
        get { return result.VelocityX; }
        set { SetVelocityX(value); }
      }
      public Builder SetVelocityX(float value) {
        PrepareBuilder();
        result.hasVelocityX = true;
        result.velocityX_ = value;
        return this;
      }
      public Builder ClearVelocityX() {
        PrepareBuilder();
        result.hasVelocityX = false;
        result.velocityX_ = 0F;
        return this;
      }
      
      public bool HasVelocityY {
        get { return result.hasVelocityY; }
      }
      public float VelocityY {
        get { return result.VelocityY; }
        set { SetVelocityY(value); }
      }
      public Builder SetVelocityY(float value) {
        PrepareBuilder();
        result.hasVelocityY = true;
        result.velocityY_ = value;
        return this;
      }
      public Builder ClearVelocityY() {
        PrepareBuilder();
        result.hasVelocityY = false;
        result.velocityY_ = 0F;
        return this;
      }
      
      public bool HasVelocityZ {
        get { return result.hasVelocityZ; }
      }
      public float VelocityZ {
        get { return result.VelocityZ; }
        set { SetVelocityZ(value); }
      }
      public Builder SetVelocityZ(float value) {
        PrepareBuilder();
        result.hasVelocityZ = true;
        result.velocityZ_ = value;
        return this;
      }
      public Builder ClearVelocityZ() {
        PrepareBuilder();
        result.hasVelocityZ = false;
        result.velocityZ_ = 0F;
        return this;
      }
    }
    static Gpb_Actor() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Mode_Command : pb::GeneratedMessage<Gpb_Mode_Command, Gpb_Mode_Command.Builder> {
    private Gpb_Mode_Command() { }
    private static readonly Gpb_Mode_Command defaultInstance = new Gpb_Mode_Command().MakeReadOnly();
    private static readonly string[] _gpbModeCommandFieldNames = new string[] { "actor_id", "mode_id", "request_time" };
    private static readonly uint[] _gpbModeCommandFieldTags = new uint[] { 16, 24, 8 };
    public static Gpb_Mode_Command DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Mode_Command DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Mode_Command ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Mode_Command__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Mode_Command, Gpb_Mode_Command.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Mode_Command__FieldAccessorTable; }
    }
    
    public const int RequestTimeFieldNumber = 1;
    private bool hasRequestTime;
    private ulong requestTime_;
    public bool HasRequestTime {
      get { return hasRequestTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RequestTime {
      get { return requestTime_; }
    }
    
    public const int ActorIdFieldNumber = 2;
    private bool hasActorId;
    private int actorId_;
    public bool HasActorId {
      get { return hasActorId; }
    }
    public int ActorId {
      get { return actorId_; }
    }
    
    public const int ModeIdFieldNumber = 3;
    private bool hasModeId;
    private int modeId_;
    public bool HasModeId {
      get { return hasModeId; }
    }
    public int ModeId {
      get { return modeId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestTime) return false;
        if (!hasActorId) return false;
        if (!hasModeId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbModeCommandFieldNames;
      if (hasRequestTime) {
        output.WriteUInt64(1, field_names[2], RequestTime);
      }
      if (hasActorId) {
        output.WriteInt32(2, field_names[0], ActorId);
      }
      if (hasModeId) {
        output.WriteInt32(3, field_names[1], ModeId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, RequestTime);
        }
        if (hasActorId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ActorId);
        }
        if (hasModeId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ModeId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Mode_Command ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Mode_Command ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Mode_Command ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Mode_Command MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Mode_Command prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Mode_Command, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Mode_Command cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Mode_Command result;
      
      private Gpb_Mode_Command PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Mode_Command original = result;
          result = new Gpb_Mode_Command();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Mode_Command MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Mode_Command.Descriptor; }
      }
      
      public override Gpb_Mode_Command DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Mode_Command.DefaultInstance; }
      }
      
      public override Gpb_Mode_Command BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Mode_Command) {
          return MergeFrom((Gpb_Mode_Command) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Mode_Command other) {
        if (other == global::autonomy_msg.Gpb_Mode_Command.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestTime) {
          RequestTime = other.RequestTime;
        }
        if (other.HasActorId) {
          ActorId = other.ActorId;
        }
        if (other.HasModeId) {
          ModeId = other.ModeId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbModeCommandFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbModeCommandFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestTime = input.ReadUInt64(ref result.requestTime_);
              break;
            }
            case 16: {
              result.hasActorId = input.ReadInt32(ref result.actorId_);
              break;
            }
            case 24: {
              result.hasModeId = input.ReadInt32(ref result.modeId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestTime {
        get { return result.hasRequestTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RequestTime {
        get { return result.RequestTime; }
        set { SetRequestTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestTime(ulong value) {
        PrepareBuilder();
        result.hasRequestTime = true;
        result.requestTime_ = value;
        return this;
      }
      public Builder ClearRequestTime() {
        PrepareBuilder();
        result.hasRequestTime = false;
        result.requestTime_ = 0UL;
        return this;
      }
      
      public bool HasActorId {
        get { return result.hasActorId; }
      }
      public int ActorId {
        get { return result.ActorId; }
        set { SetActorId(value); }
      }
      public Builder SetActorId(int value) {
        PrepareBuilder();
        result.hasActorId = true;
        result.actorId_ = value;
        return this;
      }
      public Builder ClearActorId() {
        PrepareBuilder();
        result.hasActorId = false;
        result.actorId_ = 0;
        return this;
      }
      
      public bool HasModeId {
        get { return result.hasModeId; }
      }
      public int ModeId {
        get { return result.ModeId; }
        set { SetModeId(value); }
      }
      public Builder SetModeId(int value) {
        PrepareBuilder();
        result.hasModeId = true;
        result.modeId_ = value;
        return this;
      }
      public Builder ClearModeId() {
        PrepareBuilder();
        result.hasModeId = false;
        result.modeId_ = 0;
        return this;
      }
    }
    static Gpb_Mode_Command() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_SPOI : pb::GeneratedMessage<Gpb_SPOI, Gpb_SPOI.Builder> {
    private Gpb_SPOI() { }
    private static readonly Gpb_SPOI defaultInstance = new Gpb_SPOI().MakeReadOnly();
    private static readonly string[] _gpbSPOIFieldNames = new string[] { "actor_id", "pos_x", "pos_y", "request_time" };
    private static readonly uint[] _gpbSPOIFieldTags = new uint[] { 16, 29, 37, 8 };
    public static Gpb_SPOI DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_SPOI DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_SPOI ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_SPOI__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_SPOI, Gpb_SPOI.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_SPOI__FieldAccessorTable; }
    }
    
    public const int RequestTimeFieldNumber = 1;
    private bool hasRequestTime;
    private ulong requestTime_;
    public bool HasRequestTime {
      get { return hasRequestTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RequestTime {
      get { return requestTime_; }
    }
    
    public const int ActorIdFieldNumber = 2;
    private bool hasActorId;
    private int actorId_;
    public bool HasActorId {
      get { return hasActorId; }
    }
    public int ActorId {
      get { return actorId_; }
    }
    
    public const int PosXFieldNumber = 3;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 4;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestTime) return false;
        if (!hasActorId) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbSPOIFieldNames;
      if (hasRequestTime) {
        output.WriteUInt64(1, field_names[3], RequestTime);
      }
      if (hasActorId) {
        output.WriteInt32(2, field_names[0], ActorId);
      }
      if (hasPosX) {
        output.WriteFloat(3, field_names[1], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(4, field_names[2], PosY);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, RequestTime);
        }
        if (hasActorId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ActorId);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, PosY);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_SPOI ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_SPOI ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_SPOI ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_SPOI ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_SPOI MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_SPOI prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_SPOI, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_SPOI cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_SPOI result;
      
      private Gpb_SPOI PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_SPOI original = result;
          result = new Gpb_SPOI();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_SPOI MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_SPOI.Descriptor; }
      }
      
      public override Gpb_SPOI DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_SPOI.DefaultInstance; }
      }
      
      public override Gpb_SPOI BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_SPOI) {
          return MergeFrom((Gpb_SPOI) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_SPOI other) {
        if (other == global::autonomy_msg.Gpb_SPOI.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestTime) {
          RequestTime = other.RequestTime;
        }
        if (other.HasActorId) {
          ActorId = other.ActorId;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbSPOIFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbSPOIFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestTime = input.ReadUInt64(ref result.requestTime_);
              break;
            }
            case 16: {
              result.hasActorId = input.ReadInt32(ref result.actorId_);
              break;
            }
            case 29: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 37: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestTime {
        get { return result.hasRequestTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RequestTime {
        get { return result.RequestTime; }
        set { SetRequestTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestTime(ulong value) {
        PrepareBuilder();
        result.hasRequestTime = true;
        result.requestTime_ = value;
        return this;
      }
      public Builder ClearRequestTime() {
        PrepareBuilder();
        result.hasRequestTime = false;
        result.requestTime_ = 0UL;
        return this;
      }
      
      public bool HasActorId {
        get { return result.hasActorId; }
      }
      public int ActorId {
        get { return result.ActorId; }
        set { SetActorId(value); }
      }
      public Builder SetActorId(int value) {
        PrepareBuilder();
        result.hasActorId = true;
        result.actorId_ = value;
        return this;
      }
      public Builder ClearActorId() {
        PrepareBuilder();
        result.hasActorId = false;
        result.actorId_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
    }
    static Gpb_SPOI() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Nogo : pb::GeneratedMessage<Gpb_Nogo, Gpb_Nogo.Builder> {
    private Gpb_Nogo() { }
    private static readonly Gpb_Nogo defaultInstance = new Gpb_Nogo().MakeReadOnly();
    private static readonly string[] _gpbNogoFieldNames = new string[] { "pos_x", "pos_y" };
    private static readonly uint[] _gpbNogoFieldTags = new uint[] { 13, 21 };
    public static Gpb_Nogo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Nogo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Nogo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Nogo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Nogo, Gpb_Nogo.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Nogo__FieldAccessorTable; }
    }
    
    public const int PosXFieldNumber = 1;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 2;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbNogoFieldNames;
      if (hasPosX) {
        output.WriteFloat(1, field_names[0], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(2, field_names[1], PosY);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(1, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, PosY);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Nogo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Nogo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Nogo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Nogo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Nogo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Nogo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Nogo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Nogo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Nogo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Nogo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Nogo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Nogo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Nogo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Nogo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Nogo result;
      
      private Gpb_Nogo PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Nogo original = result;
          result = new Gpb_Nogo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Nogo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Nogo.Descriptor; }
      }
      
      public override Gpb_Nogo DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Nogo.DefaultInstance; }
      }
      
      public override Gpb_Nogo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Nogo) {
          return MergeFrom((Gpb_Nogo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Nogo other) {
        if (other == global::autonomy_msg.Gpb_Nogo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbNogoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbNogoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 21: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
    }
    static Gpb_Nogo() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_NGOSiteCell : pb::GeneratedMessage<Gpb_NGOSiteCell, Gpb_NGOSiteCell.Builder> {
    private Gpb_NGOSiteCell() { }
    private static readonly Gpb_NGOSiteCell defaultInstance = new Gpb_NGOSiteCell().MakeReadOnly();
    private static readonly string[] _gpbNGOSiteCellFieldNames = new string[] { "id", "pos_x", "pos_y" };
    private static readonly uint[] _gpbNGOSiteCellFieldTags = new uint[] { 8, 21, 29 };
    public static Gpb_NGOSiteCell DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_NGOSiteCell DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_NGOSiteCell ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_NGOSiteCell__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_NGOSiteCell, Gpb_NGOSiteCell.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_NGOSiteCell__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int PosXFieldNumber = 2;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 3;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbNGOSiteCellFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[0], Id);
      }
      if (hasPosX) {
        output.WriteFloat(2, field_names[1], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(3, field_names[2], PosY);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, PosY);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_NGOSiteCell ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_NGOSiteCell ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_NGOSiteCell ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_NGOSiteCell ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_NGOSiteCell ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_NGOSiteCell ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_NGOSiteCell ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_NGOSiteCell ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_NGOSiteCell ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_NGOSiteCell ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_NGOSiteCell MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_NGOSiteCell prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_NGOSiteCell, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_NGOSiteCell cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_NGOSiteCell result;
      
      private Gpb_NGOSiteCell PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_NGOSiteCell original = result;
          result = new Gpb_NGOSiteCell();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_NGOSiteCell MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_NGOSiteCell.Descriptor; }
      }
      
      public override Gpb_NGOSiteCell DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_NGOSiteCell.DefaultInstance; }
      }
      
      public override Gpb_NGOSiteCell BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_NGOSiteCell) {
          return MergeFrom((Gpb_NGOSiteCell) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_NGOSiteCell other) {
        if (other == global::autonomy_msg.Gpb_NGOSiteCell.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbNGOSiteCellFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbNGOSiteCellFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 21: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 29: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
    }
    static Gpb_NGOSiteCell() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Time : pb::GeneratedMessage<Gpb_Time, Gpb_Time.Builder> {
    private Gpb_Time() { }
    private static readonly Gpb_Time defaultInstance = new Gpb_Time().MakeReadOnly();
    private static readonly string[] _gpbTimeFieldNames = new string[] { "time" };
    private static readonly uint[] _gpbTimeFieldTags = new uint[] { 8 };
    public static Gpb_Time DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Time DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Time ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Time__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Time, Gpb_Time.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Time__FieldAccessorTable; }
    }
    
    public const int TimeFieldNumber = 1;
    private bool hasTime;
    private ulong time_;
    public bool HasTime {
      get { return hasTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Time {
      get { return time_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbTimeFieldNames;
      if (hasTime) {
        output.WriteUInt64(1, field_names[0], Time);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Time);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Time ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Time ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Time ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Time ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Time ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Time MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Time prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Time, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Time cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Time result;
      
      private Gpb_Time PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Time original = result;
          result = new Gpb_Time();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Time MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Time.Descriptor; }
      }
      
      public override Gpb_Time DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Time.DefaultInstance; }
      }
      
      public override Gpb_Time BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Time) {
          return MergeFrom((Gpb_Time) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Time other) {
        if (other == global::autonomy_msg.Gpb_Time.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTime) {
          Time = other.Time;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbTimeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbTimeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTime = input.ReadUInt64(ref result.time_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTime(ulong value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0UL;
        return this;
      }
    }
    static Gpb_Time() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Waypoint : pb::GeneratedMessage<Gpb_Waypoint, Gpb_Waypoint.Builder> {
    private Gpb_Waypoint() { }
    private static readonly Gpb_Waypoint defaultInstance = new Gpb_Waypoint().MakeReadOnly();
    private static readonly string[] _gpbWaypointFieldNames = new string[] { "actor_id", "pos_x", "pos_y", "pos_z", "request_time" };
    private static readonly uint[] _gpbWaypointFieldTags = new uint[] { 16, 29, 37, 45, 8 };
    public static Gpb_Waypoint DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Waypoint DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Waypoint ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Waypoint__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Waypoint, Gpb_Waypoint.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Waypoint__FieldAccessorTable; }
    }
    
    public const int RequestTimeFieldNumber = 1;
    private bool hasRequestTime;
    private ulong requestTime_;
    public bool HasRequestTime {
      get { return hasRequestTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RequestTime {
      get { return requestTime_; }
    }
    
    public const int ActorIdFieldNumber = 2;
    private bool hasActorId;
    private int actorId_;
    public bool HasActorId {
      get { return hasActorId; }
    }
    public int ActorId {
      get { return actorId_; }
    }
    
    public const int PosXFieldNumber = 3;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 4;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public const int PosZFieldNumber = 5;
    private bool hasPosZ;
    private float posZ_;
    public bool HasPosZ {
      get { return hasPosZ; }
    }
    public float PosZ {
      get { return posZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestTime) return false;
        if (!hasActorId) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        if (!hasPosZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbWaypointFieldNames;
      if (hasRequestTime) {
        output.WriteUInt64(1, field_names[4], RequestTime);
      }
      if (hasActorId) {
        output.WriteInt32(2, field_names[0], ActorId);
      }
      if (hasPosX) {
        output.WriteFloat(3, field_names[1], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(4, field_names[2], PosY);
      }
      if (hasPosZ) {
        output.WriteFloat(5, field_names[3], PosZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, RequestTime);
        }
        if (hasActorId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ActorId);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, PosY);
        }
        if (hasPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, PosZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Waypoint ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Waypoint ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Waypoint ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Waypoint ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Waypoint MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Waypoint prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Waypoint, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Waypoint cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Waypoint result;
      
      private Gpb_Waypoint PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Waypoint original = result;
          result = new Gpb_Waypoint();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Waypoint MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Waypoint.Descriptor; }
      }
      
      public override Gpb_Waypoint DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Waypoint.DefaultInstance; }
      }
      
      public override Gpb_Waypoint BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Waypoint) {
          return MergeFrom((Gpb_Waypoint) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Waypoint other) {
        if (other == global::autonomy_msg.Gpb_Waypoint.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestTime) {
          RequestTime = other.RequestTime;
        }
        if (other.HasActorId) {
          ActorId = other.ActorId;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        if (other.HasPosZ) {
          PosZ = other.PosZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbWaypointFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbWaypointFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestTime = input.ReadUInt64(ref result.requestTime_);
              break;
            }
            case 16: {
              result.hasActorId = input.ReadInt32(ref result.actorId_);
              break;
            }
            case 29: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 37: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
            case 45: {
              result.hasPosZ = input.ReadFloat(ref result.posZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestTime {
        get { return result.hasRequestTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong RequestTime {
        get { return result.RequestTime; }
        set { SetRequestTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestTime(ulong value) {
        PrepareBuilder();
        result.hasRequestTime = true;
        result.requestTime_ = value;
        return this;
      }
      public Builder ClearRequestTime() {
        PrepareBuilder();
        result.hasRequestTime = false;
        result.requestTime_ = 0UL;
        return this;
      }
      
      public bool HasActorId {
        get { return result.hasActorId; }
      }
      public int ActorId {
        get { return result.ActorId; }
        set { SetActorId(value); }
      }
      public Builder SetActorId(int value) {
        PrepareBuilder();
        result.hasActorId = true;
        result.actorId_ = value;
        return this;
      }
      public Builder ClearActorId() {
        PrepareBuilder();
        result.hasActorId = false;
        result.actorId_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
      
      public bool HasPosZ {
        get { return result.hasPosZ; }
      }
      public float PosZ {
        get { return result.PosZ; }
        set { SetPosZ(value); }
      }
      public Builder SetPosZ(float value) {
        PrepareBuilder();
        result.hasPosZ = true;
        result.posZ_ = value;
        return this;
      }
      public Builder ClearPosZ() {
        PrepareBuilder();
        result.hasPosZ = false;
        result.posZ_ = 0F;
        return this;
      }
    }
    static Gpb_Waypoint() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_VillageCell : pb::GeneratedMessage<Gpb_VillageCell, Gpb_VillageCell.Builder> {
    private Gpb_VillageCell() { }
    private static readonly Gpb_VillageCell defaultInstance = new Gpb_VillageCell().MakeReadOnly();
    private static readonly string[] _gpbVillageCellFieldNames = new string[] { "id", "pos_x", "pos_y" };
    private static readonly uint[] _gpbVillageCellFieldTags = new uint[] { 8, 21, 29 };
    public static Gpb_VillageCell DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_VillageCell DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_VillageCell ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_VillageCell__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_VillageCell, Gpb_VillageCell.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_VillageCell__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int PosXFieldNumber = 2;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 3;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbVillageCellFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[0], Id);
      }
      if (hasPosX) {
        output.WriteFloat(2, field_names[1], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(3, field_names[2], PosY);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, PosY);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_VillageCell ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_VillageCell ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_VillageCell ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_VillageCell ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_VillageCell ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_VillageCell ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_VillageCell ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_VillageCell ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_VillageCell ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_VillageCell ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_VillageCell MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_VillageCell prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_VillageCell, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_VillageCell cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_VillageCell result;
      
      private Gpb_VillageCell PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_VillageCell original = result;
          result = new Gpb_VillageCell();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_VillageCell MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_VillageCell.Descriptor; }
      }
      
      public override Gpb_VillageCell DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_VillageCell.DefaultInstance; }
      }
      
      public override Gpb_VillageCell BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_VillageCell) {
          return MergeFrom((Gpb_VillageCell) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_VillageCell other) {
        if (other == global::autonomy_msg.Gpb_VillageCell.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbVillageCellFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbVillageCellFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 21: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 29: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
    }
    static Gpb_VillageCell() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_Road : pb::GeneratedMessage<Gpb_Road, Gpb_Road.Builder> {
    private Gpb_Road() { }
    private static readonly Gpb_Road defaultInstance = new Gpb_Road().MakeReadOnly();
    private static readonly string[] _gpbRoadFieldNames = new string[] { "isRoadEnd", "pos_x", "pos_y" };
    private static readonly uint[] _gpbRoadFieldTags = new uint[] { 8, 21, 29 };
    public static Gpb_Road DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_Road DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_Road ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Road__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_Road, Gpb_Road.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_Road__FieldAccessorTable; }
    }
    
    public const int IsRoadEndFieldNumber = 1;
    private bool hasIsRoadEnd;
    private bool isRoadEnd_;
    public bool HasIsRoadEnd {
      get { return hasIsRoadEnd; }
    }
    public bool IsRoadEnd {
      get { return isRoadEnd_; }
    }
    
    public const int PosXFieldNumber = 2;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 3;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsRoadEnd) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbRoadFieldNames;
      if (hasIsRoadEnd) {
        output.WriteBool(1, field_names[0], IsRoadEnd);
      }
      if (hasPosX) {
        output.WriteFloat(2, field_names[1], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(3, field_names[2], PosY);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsRoadEnd) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsRoadEnd);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, PosY);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_Road ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Road ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Road ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_Road ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Road ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Road ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_Road ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_Road ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_Road ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_Road ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_Road MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_Road prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_Road, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_Road cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_Road result;
      
      private Gpb_Road PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_Road original = result;
          result = new Gpb_Road();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_Road MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_Road.Descriptor; }
      }
      
      public override Gpb_Road DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_Road.DefaultInstance; }
      }
      
      public override Gpb_Road BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_Road) {
          return MergeFrom((Gpb_Road) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_Road other) {
        if (other == global::autonomy_msg.Gpb_Road.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsRoadEnd) {
          IsRoadEnd = other.IsRoadEnd;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbRoadFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbRoadFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsRoadEnd = input.ReadBool(ref result.isRoadEnd_);
              break;
            }
            case 21: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 29: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsRoadEnd {
        get { return result.hasIsRoadEnd; }
      }
      public bool IsRoadEnd {
        get { return result.IsRoadEnd; }
        set { SetIsRoadEnd(value); }
      }
      public Builder SetIsRoadEnd(bool value) {
        PrepareBuilder();
        result.hasIsRoadEnd = true;
        result.isRoadEnd_ = value;
        return this;
      }
      public Builder ClearIsRoadEnd() {
        PrepareBuilder();
        result.hasIsRoadEnd = false;
        result.isRoadEnd_ = false;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
    }
    static Gpb_Road() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Gpb_BaseCell : pb::GeneratedMessage<Gpb_BaseCell, Gpb_BaseCell.Builder> {
    private Gpb_BaseCell() { }
    private static readonly Gpb_BaseCell defaultInstance = new Gpb_BaseCell().MakeReadOnly();
    private static readonly string[] _gpbBaseCellFieldNames = new string[] { "id", "pos_x", "pos_y" };
    private static readonly uint[] _gpbBaseCellFieldTags = new uint[] { 8, 21, 29 };
    public static Gpb_BaseCell DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Gpb_BaseCell DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Gpb_BaseCell ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_BaseCell__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Gpb_BaseCell, Gpb_BaseCell.Builder> InternalFieldAccessors {
      get { return global::autonomy_msg.Autonomy.internal__static_autonomy_msg_Gpb_BaseCell__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int PosXFieldNumber = 2;
    private bool hasPosX;
    private float posX_;
    public bool HasPosX {
      get { return hasPosX; }
    }
    public float PosX {
      get { return posX_; }
    }
    
    public const int PosYFieldNumber = 3;
    private bool hasPosY;
    private float posY_;
    public bool HasPosY {
      get { return hasPosY; }
    }
    public float PosY {
      get { return posY_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasPosX) return false;
        if (!hasPosY) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gpbBaseCellFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[0], Id);
      }
      if (hasPosX) {
        output.WriteFloat(2, field_names[1], PosX);
      }
      if (hasPosY) {
        output.WriteFloat(3, field_names[2], PosY);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, PosX);
        }
        if (hasPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, PosY);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Gpb_BaseCell ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_BaseCell ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_BaseCell ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Gpb_BaseCell ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Gpb_BaseCell ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_BaseCell ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Gpb_BaseCell ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Gpb_BaseCell ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Gpb_BaseCell ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Gpb_BaseCell ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Gpb_BaseCell MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Gpb_BaseCell prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Gpb_BaseCell, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Gpb_BaseCell cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Gpb_BaseCell result;
      
      private Gpb_BaseCell PrepareBuilder() {
        if (resultIsReadOnly) {
          Gpb_BaseCell original = result;
          result = new Gpb_BaseCell();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Gpb_BaseCell MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::autonomy_msg.Gpb_BaseCell.Descriptor; }
      }
      
      public override Gpb_BaseCell DefaultInstanceForType {
        get { return global::autonomy_msg.Gpb_BaseCell.DefaultInstance; }
      }
      
      public override Gpb_BaseCell BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Gpb_BaseCell) {
          return MergeFrom((Gpb_BaseCell) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Gpb_BaseCell other) {
        if (other == global::autonomy_msg.Gpb_BaseCell.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasPosX) {
          PosX = other.PosX;
        }
        if (other.HasPosY) {
          PosY = other.PosY;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gpbBaseCellFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gpbBaseCellFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 21: {
              result.hasPosX = input.ReadFloat(ref result.posX_);
              break;
            }
            case 29: {
              result.hasPosY = input.ReadFloat(ref result.posY_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasPosX {
        get { return result.hasPosX; }
      }
      public float PosX {
        get { return result.PosX; }
        set { SetPosX(value); }
      }
      public Builder SetPosX(float value) {
        PrepareBuilder();
        result.hasPosX = true;
        result.posX_ = value;
        return this;
      }
      public Builder ClearPosX() {
        PrepareBuilder();
        result.hasPosX = false;
        result.posX_ = 0F;
        return this;
      }
      
      public bool HasPosY {
        get { return result.hasPosY; }
      }
      public float PosY {
        get { return result.PosY; }
        set { SetPosY(value); }
      }
      public Builder SetPosY(float value) {
        PrepareBuilder();
        result.hasPosY = true;
        result.posY_ = value;
        return this;
      }
      public Builder ClearPosY() {
        PrepareBuilder();
        result.hasPosY = false;
        result.posY_ = 0F;
        return this;
      }
    }
    static Gpb_BaseCell() {
      object.ReferenceEquals(global::autonomy_msg.Autonomy.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
